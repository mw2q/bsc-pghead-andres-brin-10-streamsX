Q21,709851.0,->  Nested Loop Semi Join  (cost=2406.31..2845723.76 rows=1 width=34) (actual time=41.336..40135.143 rows=709851 loops=1)
Q3,315164.0,->  Sort  (cost=2531269.42..2539148.52 rows=3151640 width=20) (actual time=44451.029..44451.030 rows=10 loops=1)
Q18,300227.9,->  GroupAggregate  (cost=10153434.36..10979061.08 rows=30022790 width=39) (actual time=68004.217..68004.535 rows=100 loops=1)
Q18,67635.0,->  Hash Join  (cost=2178818.62..2792161.58 rows=7507492 width=39) (actual time=42808.693..49276.826 rows=111 loops=1)
Q18,67635.0,->  Hash Join  (cost=2109790.62..2610521.21 rows=7507492 width=20) (actual time=41692.129..48159.963 rows=111 loops=1)
Q18,67635.0,->  Hash  (cost=2792161.58..2792161.58 rows=7507492 width=39) (actual time=49277.121..49277.121 rows=111 loops=1)
Q18,42828.5,->  Sort  (cost=10153434.36..10228491.33 rows=30022790 width=39) (actual time=68004.197..68004.238 rows=701 loops=1)
Q21,39972.0,->  Nested Loop Anti Join  (cost=2406.88..2845725.54 rows=1 width=26) (actual time=44.819..42988.819 rows=39972 loops=1)
Q18,38639.3,->  Hash Join  (cost=2886005.23..5603731.68 rows=30022790 width=39) (actual time=49700.480..68002.854 rows=777 loops=1)
Q18,36714.0,->  Hash  (cost=2058849.94..2058849.94 rows=4075255 width=4) (actual time=41526.271..41526.271 rows=111 loops=1)
Q18,36714.0,->  HashAggregate  (cost=1967156.70..2018097.39 rows=4075255 width=8) (actual time=37321.456..41525.757 rows=111 loops=1)
Q10,28569.8,->  Sort  (cost=2274401.68..2275830.17 rows=571396 width=176) (actual time=35195.914..35195.916 rows=20 loops=1)
Q9,24283.2,->  Sort  (cost=1197018.28..1197018.61 rows=134 width=46) (actual time=86453.684..86977.635 rows=3253952 loops=1)
Q9,24283.2,->  Nested Loop  (cost=66924.65..1197009.47 rows=134 width=24) (actual time=589.242..77565.238 rows=3253952 loops=1)
Q9,24283.2,->  Nested Loop  (cost=66924.22..1196944.53 rows=134 width=24) (actual time=589.173..48560.546 rows=3253952 loops=1)
Q9,24283.2,->  Nested Loop  (cost=66923.93..1196901.29 rows=134 width=28) (actual time=589.162..38417.289 rows=3253952 loops=1)
Q9,24283.2,->  Hash Join  (cost=66926.22..1197013.55 rows=134 width=46) (actual time=589.304..80763.276 rows=3253952 loops=1)
Q2,4644.0,->  Merge Join  (cost=465687.75..885892.62 rows=1 width=190) (actual time=5968.290..7865.222 rows=4644 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2845725.54..2845725.55 rows=1 width=26) (actual time=43053.062..43054.088 rows=4023 loops=1)
Q15,3772.0,->  Subquery Scan on revenue0  (cost=1501822.02..1501906.89 rows=3772 width=12) (actual time=53260.086..53268.388 rows=1 loops=1)
Q15,3772.0,->  Sort  (cost=1502130.96..1502140.39 rows=3772 width=12) (actual time=53268.443..53268.444 rows=1 loops=1)
Q15,3772.0,Merge Join  (cost=2987030.97..2992128.76 rows=3772 width=79) (actual time=53292.814..53292.816 rows=1 loops=1)
Q15,3772.0,->  HashAggregate  (cost=1501822.02..1501869.17 rows=3772 width=12) (actual time=53260.084..53268.386 rows=1 loops=1)
Q7,767.5,Sort  (cost=2114754.08..2114761.75 rows=3070 width=64) (actual time=23186.710..23186.711 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2114530.21..2114576.26 rows=3070 width=64) (actual time=23186.640..23186.646 rows=4 loops=1)
Q8,365.0,Sort  (cost=1745706.20..1745708.02 rows=730 width=38) (actual time=12710.723..12710.724 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1745658.70..1745671.48 rows=730 width=38) (actual time=12710.683..12710.683 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845725.56..2845725.57 rows=1 width=26) (actual time=43055.372..43055.379 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845725.56..2845725.57 rows=1 width=26) (actual time=43055.374..43055.391 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885892.63..885892.63 rows=1 width=190) (actual time=7869.855..7869.881 rows=100 loops=1)
Q2,100.0,Limit  (cost=885892.63..885892.63 rows=1 width=190) (actual time=7869.856..7869.890 rows=100 loops=1)
Q11,33.4,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7117.204..7118.226 rows=9574 loops=1)
Q11,33.4,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7041.937..7111.483 rows=9574 loops=1)
Q3,27.6,->  HashAggregate  (cost=2431647.21..2463163.61 rows=3151640 width=20) (actual time=44392.963..44429.933 rows=114073 loops=1)
Q15,26.5,->  HashAggregate  (cost=1484814.84..1484852.56 rows=3772 width=12) (actual time=24610.202..24635.948 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=736525)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7711.42 rows=756342 width=0) (actual time=122.308..122.308 rows=10664960 loops=1)
Q3,10.4,->  Hash Join  (cost=762862.49..2384372.61 rows=3151640 width=20) (actual time=8012.808..44090.260 rows=301816 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2417.31 rows=320707 width=0) (actual time=34.717..34.717 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.075 rows=8 loops=433752)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.626..3.626 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.675..3.675 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1956929.16..1956929.22 rows=25 width=34) (actual time=16147.649..16147.649 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1956928.33..1956928.58 rows=25 width=34) (actual time=16147.605..16147.606 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485995.56..1485995.56 rows=1 width=16) (actual time=14219.176..14219.177 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.05 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=573924)
Q4,5.0,->  HashAggregate  (cost=1485995.54..1485995.55 rows=1 width=16) (actual time=14219.120..14219.120 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=709851)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5805.33 rows=576533 width=0) (actual time=27.418..27.418 rows=2535680 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5830.29 rows=579029 width=0) (actual time=27.628..27.628 rows=2535680 loops=1)
Q13,4.2,Sort  (cost=846239.30..846239.80 rows=200 width=8) (actual time=25704.221..25704.224 rows=47 loops=1)
Q13,4.2,->  HashAggregate  (cost=846229.66..846231.66 rows=200 width=8) (actual time=25704.141..25704.153 rows=47 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1198682)
Q17,3.8,->  Nested Loop  (cost=82.77..114466.65 rows=20095 width=4) (actual time=2.799..181.662 rows=5193 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=455387)
Q4,3.3,->  Nested Loop Semi Join  (cost=5950.03..1485213.15 rows=156478 width=16) (actual time=27.606..13905.551 rows=526550 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.011..0.025 rows=3 loops=1959)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..61316.25 rows=8170166 width=0) (actual time=30.335..30.335 rows=2535680 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241772.95 rows=32216660 width=0) (actual time=119.758..119.758 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.286..0.356 rows=3 loops=21849)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55269.61 rows=7363948 width=0) (actual time=27.522..27.522 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691110.29..691110.29 rows=3 width=20) (actual time=8210.494..8210.494 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638238.14..638238.18 rows=3 width=20) (actual time=8210.407..8210.408 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6283)
Q20,2.0,->  Nested Loop  (cost=755.47..11668787.29 rows=29289 width=4) (actual time=12.701..8406.855 rows=59277 loops=1)
Q20,2.0,->  Hash  (cost=11668787.29..11668787.29 rows=29289 width=4) (actual time=8443.883..8443.883 rows=59277 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.180..4.180 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403556.23..405039.64 rows=593364 width=40) (actual time=10101.611..10248.626 rows=1190837 loops=1)
Q16,2.0,->  Hash Join  (cost=54765.26..346656.90 rows=593364 width=40) (actual time=1474.412..6825.986 rows=1190837 loops=1)
Q15,2.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..19.330 rows=49906 loops=1)
Q12,2.0,Sort  (cost=3022836.04..3022836.05 rows=1 width=27) (actual time=35462.772..35462.772 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022836.02..3022836.03 rows=1 width=27) (actual time=35462.692..35462.693 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344449.91..2239198.18 rows=571396 width=176) (actual time=11051.432..33032.928 rows=1149931 loops=1)
Q10,2.0,->  Hash Join  (cost=344448.35..2231339.92 rows=571396 width=154) (actual time=11051.404..32620.427 rows=1149931 loops=1)
Q10,2.0,->  Hash Join  (cost=275420.35..2153740.98 rows=571396 width=12) (actual time=9451.992..30248.240 rows=1149931 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902511.12 rows=800608 width=34) (actual time=41.184..26889.711 rows=1524618 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.547..3787.279 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817042.75 rows=20015193 width=8) (actual time=0.004..20900.635 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323952.98 rows=390528 width=38) (actual time=41.319..34907.415 rows=736525 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.508 rows=56 loops=1)
Q15,1.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..131798.23 rows=17553364 width=0) (actual time=119.686..119.686 rows=10664960 loops=1)
Q15,1.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..131798.23 rows=17553364 width=0) (actual time=118.819..118.819 rows=10664960 loops=1)
Q20,1.5,Sort  (cost=11671596.39..11671599.32 rows=1172 width=51) (actual time=8471.954..8472.060 rows=1822 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669196.40..11671536.65 rows=1172 width=51) (actual time=8444.344..8470.672 rows=1822 loops=1)
Q1,1.5,Sort  (cost=4181991.77..4181991.79 rows=6 width=20) (actual time=89355.704..89355.705 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4181991.59..4181991.70 rows=6 width=20) (actual time=89355.650..89355.652 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.162..4.162 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2253483.08..2259197.04 rows=571396 width=176) (actual time=34865.652..35057.873 rows=381837 loops=1)
Q9,1.3,GroupAggregate  (cost=1197018.28..1197022.97 rows=134 width=46) (actual time=86463.827..89126.968 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.76 rows=139775 width=0) (actual time=430.389..430.389 rows=191017 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.71..41854.80 rows=139775 width=24) (actual time=438.551..549.472 rows=191017 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91075.13 rows=9092713 width=0) (actual time=118.546..118.546 rows=10664960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112109 width=4) (actual time=0.012..559.078 rows=108438 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.36..352354.65 rows=447329 width=16) (actual time=588.964..4651.744 rows=433752 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112109 width=4) (actual time=588.612..588.612 rows=108438 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.686..2006.918 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.14..1697735.99 rows=122911 width=20) (actual time=7.350..10266.280 rows=122558 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.70..1499283.38 rows=405308 width=16) (actual time=7.274..5713.545 rows=402567 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.58..1744704.59 rows=24582 width=16) (actual time=2110.927..12625.613 rows=24512 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.14..1745167.06 rows=24582 width=38) (actual time=2110.980..12666.957 rows=24512 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.28..1736772.87 rows=24582 width=16) (actual time=2110.861..12445.133 rows=24512 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2099.486..2099.486 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.68 rows=13500 width=0) (actual time=4.946..4.946 rows=13387 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13387)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.05..28323.50 rows=13500 width=4) (actual time=7.213..272.680 rows=13387 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.038..0.391 rows=30 loops=13387)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.664..392.340 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3595.142 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1459749 width=42) (actual time=607.101..22517.248 rows=1454953 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113618.98 rows=60749 width=64) (actual time=644.926..23096.080 rows=58073 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=606.919..8906.209 rows=1198682 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..568.603 rows=119899 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..35.801 rows=8011 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=606.426..606.426 rows=119899 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=37.748..37.748 rows=8011 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91274.43..1362333.47 rows=797197 width=8) (actual time=119.380..28398.993 rows=795005 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.811..2286.352 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=100228.28..1937118.12 rows=1823044 width=46) (actual time=2430.754..15305.617 rows=1821898 loops=1)
Q5,1.0,->  Hash Join  (cost=104907.28..1956199.14 rows=72919 width=34) (actual time=2500.185..16063.955 rows=72311 loops=1)
Q5,1.0,->  Hash Join  (cost=100227.72..489408.47 rows=455870 width=38) (actual time=2430.729..7861.991 rows=455387 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2398.194..2398.194 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61886.08..437960.57 rows=2279350 width=8) (actual time=30.500..4541.951 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.724..446.966 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5949.47..268119.46 rows=576533 width=20) (actual time=27.585..4323.529 rows=573924 loops=1)
Q3,1.0,->  Hash Join  (cost=106799.82..494674.60 rows=1468862 width=12) (actual time=394.455..7411.431 rows=1474556 loops=1)
Q3,1.0,->  Hash  (cost=494674.60..494674.60 rows=1468862 width=12) (actual time=7885.678..7885.678 rows=1474556 loops=1)
Q3,1.0,->  Hash  (cost=45949.23..45949.23 rows=299200 width=4) (actual time=364.745..364.745 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.43 rows=299200 width=0) (actual time=64.780..64.780 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57110.59..402681.94 rows=7363948 width=16) (actual time=27.684..4840.548 rows=7353121 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249827.12..1719008.37 rows=32216660 width=12) (actual time=120.521..30574.571 rows=32141233 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.23..45949.23 rows=299200 width=4) (actual time=72.641..293.406 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.017..3590.899 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=7491.263..7491.263 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594266.85..637798.83 rows=58575 width=20) (actual time=7977.510..8189.385 rows=63435 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.63 rows=381015 width=0) (actual time=72.678..72.678 rows=381929 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.89..51919.53 rows=381015 width=4) (actual time=80.465..307.394 rows=381929 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.290..40.018 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.149..41.149 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.277..39.298 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5967.247..6090.701 rows=1602067 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.426..164.114 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7944 width=30) (actual time=0.020..1146.813 rows=7923 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=175.332..4923.975 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=175.200..175.200 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.275..31.889 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.290..25.520 rows=3991 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..749.53 rows=20098 width=0) (actual time=8.615..8.615 rows=21849 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.270..24.910 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=755.04..34967.17 rows=22021 width=4) (actual time=12.185..583.388 rows=21849 loops=1)
Q19,1.0,->  Nested Loop  (cost=12812.22..610254.21 rows=1119 width=8) (actual time=33.672..1435.136 rows=1155 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.154..4.154 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8003 width=0) (actual time=3.170..3.170 rows=7906 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.11 rows=7941 width=0) (actual time=3.432..3.432 rows=7954 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.43 rows=7874 width=0) (actual time=3.555..3.555 rows=8037 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12811.66..26466.92 rows=4740 width=30) (actual time=30.777..272.298 rows=4823 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.008..3598.660 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666928.80 rows=60045580 width=8) (actual time=0.012..7931.149 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666928.80 rows=60045580 width=8) (actual time=0.004..7757.240 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=1959)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=1959)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.51 rows=2008 width=0) (actual time=1.808..1.808 rows=1959 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.01..6649.95 rows=2008 width=4) (actual time=2.477..49.416 rows=1959 loops=1)
Q16,1.0,Sort  (cost=413310.87..413380.58 rows=27883 width=40) (actual time=10908.172..10910.012 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51031.34..51031.34 rows=297416 width=40) (actual time=1471.896..1471.896 rows=297867 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403556.23..411252.11 rows=27883 width=40) (actual time=10101.686..10848.647 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2491.66..51031.34 rows=297416 width=40) (actual time=34.822..1339.735 rows=297867 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=132365.14..1462138.60 rows=2267624 width=12) (actual time=119.569..22478.608 rows=2246713 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=132365.14..1462138.60 rows=2267624 width=12) (actual time=120.463..26376.624 rows=2246713 loops=1)
Q14,1.0,->  Hash Join  (cost=93422.51..1137503.79 rows=756342 width=29) (actual time=1577.801..41419.726 rows=774323 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7900.51..1040636.66 rows=756342 width=12) (actual time=123.172..38975.533 rows=774323 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14924618 width=8) (actual time=0.026..7125.962 rows=14853742 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734106.57 rows=14924618 width=8) (actual time=808.503..16676.564 rows=15353766 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.006..4993.599 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417498.55 rows=286735 width=15) (actual time=0.442..24998.887 rows=312602 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017818.16 rows=286735 width=27) (actual time=9745.752..35137.342 rows=312602 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=9700.002..9700.002 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.308..47.543 rows=3981 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.290..26.757 rows=3981 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.656..2657.664 rows=318480 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=48.829..4058.296 rows=318480 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=48.789..48.789 rows=3981 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.588..27.588 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.259..26.166 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.294..46.654 rows=3981 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817042.75 rows=59123721 width=20) (actual time=0.015..18370.158 rows=59125388 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817042.75 rows=14817047 width=12) (actual time=0.011..17666.336 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=268182.48..268182.48 rows=579029 width=8) (actual time=9448.469..9448.469 rows=574622 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5975.05..268182.48 rows=579029 width=8) (actual time=27.872..9177.982 rows=574622 loops=1)
