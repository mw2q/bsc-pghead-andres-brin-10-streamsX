Q21,703732.0,->  Nested Loop Semi Join  (cost=2406.31..2845723.76 rows=1 width=34) (actual time=54.062..35104.171 rows=703732 loops=1)
Q3,317147.1,->  Sort  (cost=2552896.81..2560825.48 rows=3171471 width=20) (actual time=34988.722..34988.724 rows=10 loops=1)
Q18,301428.2,->  GroupAggregate  (cost=10193881.40..11022809.17 rows=30142828 width=39) (actual time=66800.594..66800.941 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2186683.77..2802312.37 rows=7537460 width=39) (actual time=43115.249..48574.448 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2117655.77..2620222.47 rows=7537460 width=20) (actual time=41972.944..47431.859 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2802312.37..2802312.37 rows=7537460 width=39) (actual time=48574.663..48574.663 rows=111 loops=1)
Q18,42999.7,->  Sort  (cost=10193881.40..10269238.47 rows=30142828 width=39) (actual time=66800.582..66800.621 rows=701 loops=1)
Q21,39261.0,->  Nested Loop Anti Join  (cost=2406.88..2845725.54 rows=1 width=26) (actual time=55.301..38022.371 rows=39261 loops=1)
Q18,38793.8,->  Hash Join  (cost=2896530.62..5625123.16 rows=30142828 width=39) (actual time=48721.419..66799.555 rows=777 loops=1)
Q18,36714.0,->  Hash  (cost=2066715.08..2066715.08 rows=4075255 width=4) (actual time=41853.684..41853.684 rows=111 loops=1)
Q18,36714.0,->  HashAggregate  (cost=1975021.84..2025962.53 rows=4075255 width=8) (actual time=36873.726..41853.432 rows=111 loops=1)
Q10,28766.4,->  Sort  (cost=2296168.70..2297607.02 rows=575329 width=176) (actual time=30664.501..30664.505 rows=20 loops=1)
Q9,22057.0,->  Sort  (cost=1275555.90..1275556.27 rows=148 width=46) (actual time=96752.411..97238.226 rows=3264438 loops=1)
Q9,22057.0,->  Nested Loop  (cost=67049.78..1275546.23 rows=148 width=24) (actual time=1001.984..87847.462 rows=3264438 loops=1)
Q9,22057.0,->  Nested Loop  (cost=67049.35..1275474.50 rows=148 width=24) (actual time=1001.956..51677.259 rows=3264438 loops=1)
Q9,22057.0,->  Nested Loop  (cost=67049.05..1275426.75 rows=148 width=28) (actual time=1001.946..41224.854 rows=3264438 loops=1)
Q9,22057.0,->  Hash Join  (cost=67051.34..1275550.57 rows=148 width=46) (actual time=1002.049..91249.385 rows=3264438 loops=1)
Q2,4832.0,->  Merge Join  (cost=465687.75..890289.45 rows=1 width=190) (actual time=6417.520..9074.833 rows=4832 loops=1)
Q21,3987.0,->  HashAggregate  (cost=2845725.54..2845725.55 rows=1 width=26) (actual time=38072.347..38073.423 rows=3987 loops=1)
Q15,3779.0,->  Subquery Scan on revenue5  (cost=1846907.73..1846992.76 rows=3779 width=12) (actual time=52913.040..52930.065 rows=1 loops=1)
Q15,3779.0,->  Sort  (cost=1847217.31..1847226.75 rows=3779 width=12) (actual time=52930.089..52930.090 rows=1 loops=1)
Q15,3779.0,Merge Join  (cost=3677156.07..3682253.95 rows=3779 width=79) (actual time=52944.300..52944.303 rows=1 loops=1)
Q15,3779.0,->  HashAggregate  (cost=1846907.73..1846954.97 rows=3779 width=12) (actual time=52913.040..52930.063 rows=1 loops=1)
Q7,767.5,Sort  (cost=2121025.35..2121033.03 rows=3070 width=64) (actual time=21473.513..21473.514 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2120801.49..2120847.54 rows=3070 width=64) (actual time=21473.451..21473.453 rows=4 loops=1)
Q8,365.0,Sort  (cost=1725152.42..1725154.25 rows=730 width=38) (actual time=10608.318..10608.319 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1725104.93..1725117.71 rows=730 width=38) (actual time=10608.279..10608.280 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845725.56..2845725.57 rows=1 width=26) (actual time=38074.529..38074.534 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845725.56..2845725.57 rows=1 width=26) (actual time=38074.530..38074.547 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890289.46..890289.46 rows=1 width=190) (actual time=9079.653..9079.667 rows=100 loops=1)
Q2,100.0,Limit  (cost=890289.46..890289.46 rows=1 width=190) (actual time=9079.655..9079.678 rows=100 loops=1)
Q11,35.5,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8615.520..8616.572 rows=8991 loops=1)
Q11,35.5,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8507.397..8610.450 rows=8991 loops=1)
Q3,28.0,->  HashAggregate  (cost=2452647.75..2484362.46 rows=3171471 width=20) (actual time=34923.284..34967.827 rows=113038 loops=1)
Q15,26.4,->  HashAggregate  (cost=1829853.43..1829891.22 rows=3779 width=12) (actual time=24842.614..24876.034 rows=100000 loops=1)
Q14,15.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..6955.33 rows=680733 width=0) (actual time=119.988..119.988 rows=10728960 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=730212)
Q3,10.6,->  Hash Join  (cost=767939.18..2405075.68 rows=3171471 width=20) (actual time=8554.782..34645.669 rows=298245 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2419.61 rows=321013 width=0) (actual time=34.950..34.950 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.081 rows=8 loops=435220)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.632..3.632 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.277..0.277 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1925798.45..1925798.51 rows=25 width=34) (actual time=14964.100..14964.101 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1925797.62..1925797.87 rows=25 width=34) (actual time=14964.054..14964.055 rows=5 loops=1)
Q4,5.0,Sort  (cost=1480793.63..1480793.63 rows=1 width=16) (actual time=15975.062..15975.062 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=561282)
Q4,5.0,->  HashAggregate  (cost=1480793.61..1480793.62 rows=1 width=16) (actual time=15975.011..15975.014 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703732)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5741.82 rows=570182 width=0) (actual time=27.878..27.878 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=850820.51..850821.01 rows=200 width=8) (actual time=28836.679..28836.680 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850810.87..850812.87 rows=200 width=8) (actual time=28836.600..28836.612 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5870.19 rows=583019 width=0) (actual time=28.186..28.186 rows=2561280 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1200096)
Q17,3.8,->  Nested Loop  (cost=78.39..112337.74 rows=19912 width=4) (actual time=1.581..207.406 rows=5139 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=456212)
Q4,3.3,->  Nested Loop Semi Join  (cost=5884.93..1480021.38 rows=154446 width=16) (actual time=28.147..15658.531 rows=515101 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=1959)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245458.83 rows=32708110 width=0) (actual time=119.800..119.800 rows=10739200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.277..0.347 rows=3 loops=21731)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246432.96 rows=32837995 width=0) (actual time=120.118..120.118 rows=10676480 loops=1)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246432.96 rows=32837995 width=0) (actual time=118.771..118.771 rows=10686720 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55128.07 rows=7345076 width=0) (actual time=27.504..27.504 rows=2553600 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.018..10.577 rows=35971 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44662.37 rows=5949649 width=0) (actual time=27.430..27.430 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=694731.92..694731.93 rows=3 width=20) (actual time=8149.932..8149.933 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641814.41..641814.45 rows=3 width=20) (actual time=8149.837..8149.838 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.057 rows=2 loops=6486)
Q20,2.0,->  Nested Loop  (cost=754.78..11668733.31 rows=29289 width=4) (actual time=12.890..7859.795 rows=58920 loops=1)
Q20,2.0,->  Hash  (cost=11668733.31..11668733.31 rows=29289 width=4) (actual time=7895.533..7895.533 rows=58920 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.170..4.170 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3053221.56..3053221.56 rows=1 width=27) (actual time=33378.635..33378.636 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053221.54..3053221.55 rows=1 width=27) (actual time=33378.588..33378.589 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403688.68..405174.65 rows=594389 width=40) (actual time=9216.731..9379.778 rows=1186503 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.522..2766.933 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54781.77..346683.66 rows=594389 width=40) (actual time=1260.586..5580.351 rows=1186503 loops=1)
Q10,1.9,->  Hash Join  (cost=347132.53..2260722.88 rows=575329 width=176) (actual time=6927.650..28407.818 rows=1147676 loops=1)
Q10,1.9,->  Hash Join  (cost=347130.97..2252810.55 rows=575329 width=154) (actual time=6927.623..28000.765 rows=1147676 loops=1)
Q10,1.9,->  Hash Join  (cost=278102.97..2175152.61 rows=575329 width=12) (actual time=5335.580..25714.977 rows=1147676 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817042.75 rows=20015193 width=8) (actual time=0.003..17009.563 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323952.98 rows=390528 width=38) (actual time=54.046..30674.706 rows=730212 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902511.12 rows=800608 width=34) (actual time=54.028..23217.672 rows=1512617 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.473 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671542.41..11671545.34 rows=1172 width=51) (actual time=7929.175..7929.280 rows=1771 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669142.42..11671482.67 rows=1172 width=51) (actual time=7895.958..7926.565 rows=1771 loops=1)
Q1,1.5,Sort  (cost=4229557.72..4229557.74 rows=6 width=20) (actual time=90586.385..90586.385 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4229557.54..4229557.64 rows=6 width=20) (actual time=90586.334..90586.336 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2275106.11..2280859.40 rows=575329 width=176) (actual time=30336.153..30526.770 rows=381151 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.31 rows=140232 width=0) (actual time=479.322..479.322 rows=190998 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.37..41871.46 rows=140232 width=24) (actual time=487.602..587.726 rows=190998 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=122119 width=4) (actual time=0.010..955.890 rows=108805 loops=1)
Q9,1.1,->  Hash Join  (cost=67048.49..352879.19 rows=487270 width=16) (actual time=1001.913..4962.690 rows=435220 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=122119 width=4) (actual time=1001.446..1001.446 rows=108805 loops=1)
Q9,1.1,GroupAggregate  (cost=1275555.90..1275561.08 rows=148 width=46) (actual time=96761.600..99372.184 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92258.50 rows=9211050 width=0) (actual time=126.996..126.996 rows=10696960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.755..2017.529 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.25..1677253.66 rows=121996 width=20) (actual time=7.105..8197.449 rows=120287 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.81..1480268.77 rows=402288 width=16) (actual time=7.067..4405.172 rows=395028 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.69..1724157.91 rows=24399 width=16) (actual time=2123.810..10530.855 rows=23955 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.15 rows=31 width=20) (actual time=0.026..0.311 rows=30 loops=13188)
Q8,1.0,->  Hash Join  (cost=38744.25..1724616.95 rows=24399 width=38) (actual time=2123.852..10569.400 rows=23955 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.39..1716285.28 rows=24399 width=16) (actual time=2123.796..10389.080 rows=23955 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2114.168..2114.168 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.93 rows=13267 width=0) (actual time=4.756..4.756 rows=13188 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.25..28038.87 rows=13267 width=4) (actual time=7.017..172.743 rows=13188 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.665..393.984 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.007..2700.829 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2108014.45 rows=1464117 width=42) (actual time=630.716..20743.816 rows=1460773 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2119887.52 rows=60931 width=64) (actual time=680.117..21384.035 rows=57884 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=630.649..8312.697 rows=1200096 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..590.331 rows=120069 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..46.665 rows=7983 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=630.164..630.164 rows=120069 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=49.018..49.018 rows=7983 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92449.95..1369362.57 rows=765775 width=8) (actual time=127.851..25021.025 rows=765397 loops=1)
Q5,1.0,->  Nested Loop  (cost=83580.63..1905822.00 rows=1842973 width=46) (actual time=2131.924..14058.356 rows=1826113 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.727..1995.691 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=88259.63..1925060.46 rows=73716 width=34) (actual time=2190.804..14885.681 rows=72623 loops=1)
Q5,1.0,->  Hash Join  (cost=83580.07..442128.42 rows=460856 width=38) (actual time=2131.903..8207.693 rows=456212 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2102.284..2102.284 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45238.44..390537.17 rows=2304282 width=8) (actual time=27.590..5051.914 rows=2281951 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.642..389.269 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5884.36..268465.09 rows=570182 width=20) (actual time=28.094..7237.806 rows=561282 loops=1)
Q3,1.0,->  Hash Join  (cost=106664.11..495977.37 rows=1466077 width=12) (actual time=427.806..7944.217 rows=1451746 loops=1)
Q3,1.0,->  Hash  (cost=495977.37..495977.37 rows=1466077 width=12) (actual time=8427.619..8427.619 rows=1451746 loops=1)
Q3,1.0,->  Hash  (cost=45957.28..45957.28 rows=299400 width=4) (actual time=398.150..398.150 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.93 rows=299400 width=0) (actual time=68.816..68.816 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56964.34..404072.79 rows=7345076 width=16) (actual time=27.662..5079.528 rows=7277393 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253635.85..1736402.23 rows=32708110 width=12) (actual time=120.548..20147.006 rows=32381998 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.78..45957.28 rows=299400 width=4) (actual time=78.063..318.774 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.015..3490.596 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7393.322..7393.322 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597814.70..641373.65 rows=58767 width=20) (actual time=7926.051..8128.645 rows=63508 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.92 rows=382259 width=0) (actual time=107.957..107.957 rows=381991 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6649.49..51961.79 rows=382259 width=4) (actual time=116.389..354.608 rows=381991 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.272..52.502 rows=3987 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=53.990..53.990 rows=3987 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.257..51.615 rows=3987 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6416.124..6543.123 rows=1602672 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.316..145.629 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8057 width=30) (actual time=0.246..1822.853 rows=8036 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=156.694..5225.653 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=156.562..156.562 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..28.248 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.274..29.173 rows=3924 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.84 rows=20029 width=0) (actual time=8.863..8.863 rows=21731 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.257..28.584 rows=3924 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.35..34913.19 rows=22021 width=4) (actual time=12.457..295.480 rows=21731 loops=1)
Q19,1.0,->  Nested Loop  (cost=12813.26..610044.53 rows=1119 width=8) (actual time=32.698..1698.465 rows=1166 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8034 width=0) (actual time=3.615..3.615 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7993 width=0) (actual time=3.626..3.626 rows=7986 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.67 rows=7894 width=0) (actual time=3.408..3.408 rows=7979 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12812.69..26462.86 rows=4737 width=30) (actual time=32.390..291.749 rows=4953 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2630.184 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673593.56 rows=60285656 width=8) (actual time=0.006..8598.448 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673593.56 rows=60285656 width=8) (actual time=0.046..8182.390 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.045 rows=30 loops=1959)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.045 rows=30 loops=1959)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.13 rows=1970 width=0) (actual time=0.913..0.913 rows=1959 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.62..6536.45 rows=1970 width=4) (actual time=1.223..32.401 rows=1959 loops=1)
Q16,1.0,Sort  (cost=413460.49..413530.32 rows=27931 width=40) (actual time=10048.080..10051.088 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51041.42..51041.42 rows=297930 width=40) (actual time=1257.690..1257.690 rows=296785 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403688.68..411397.85 rows=27931 width=40) (actual time=9216.789..9988.727 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2494.09..51041.42 rows=297930 width=40) (actual time=35.026..1130.678 rows=296785 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=247001.44..1807114.36 rows=2273907 width=12) (actual time=119.548..22664.985 rows=2250407 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=247001.44..1807114.36 rows=2273907 width=12) (actual time=120.885..25690.345 rows=2250407 loops=1)
Q14,1.0,->  Hash Join  (cost=92647.51..1104199.02 rows=680733 width=29) (actual time=1531.078..23795.236 rows=699590 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7125.51..1008466.03 rows=680733 width=12) (actual time=120.817..21524.721 rows=699590 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14999399 width=8) (actual time=0.024..7721.633 rows=14854652 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738313.87 rows=14999399 width=8) (actual time=915.231..18418.495 rows=15354671 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.010..4713.026 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441626.55 rows=293944 width=15) (actual time=0.106..23620.191 rows=310644 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3048077.52 rows=293944 width=27) (actual time=9147.633..33065.148 rows=310644 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=9101.878..9101.878 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.314..41.725 rows=4029 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.308..26.102 rows=4029 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.115..3828.342 rows=322320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=42.986..4303.149 rows=322320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=42.854..42.854 rows=4029 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.996..26.996 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..25.435 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.294..41.094 rows=4029 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831524.94 rows=59950815 width=20) (actual time=0.014..19002.637 rows=59486860 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=14964930 width=12) (actual time=0.014..17389.089 rows=14807792 loops=1)
Q10,1.0,->  Hash  (cost=270815.23..270815.23 rows=583019 width=8) (actual time=5332.209..5332.209 rows=573132 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6015.95..270815.23 rows=583019 width=8) (actual time=28.365..5141.148 rows=573132 loops=1)
