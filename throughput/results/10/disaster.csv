Q21,715261.0,->  Nested Loop Semi Join  (cost=2406.31..2868524.43 rows=1 width=34) (actual time=41.844..36053.746 rows=715261 loops=1)
Q3,320601.9,->  Sort  (cost=2566848.63..2574863.68 rows=3206019 width=20) (actual time=34739.155..34739.157 rows=10 loops=1)
Q18,300828.0,->  GroupAggregate  (cost=10173655.70..11000932.95 rows=30082809 width=39) (actual time=65537.338..65537.676 rows=100 loops=1)
Q18,67770.0,->  Hash Join  (cost=2182751.20..2797236.98 rows=7522476 width=39) (actual time=42571.795..48783.158 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2113723.20..2615371.84 rows=7522476 width=20) (actual time=41729.584..47940.615 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2797236.98..2797236.98 rows=7522476 width=39) (actual time=48783.458..48783.458 rows=111 loops=1)
Q18,42914.1,->  Sort  (cost=10173655.70..10248862.72 rows=30082809 width=39) (actual time=65537.327..65537.370 rows=701 loops=1)
Q21,40191.0,->  Nested Loop Anti Join  (cost=2406.88..2868526.21 rows=1 width=26) (actual time=41.924..38919.514 rows=40191 loops=1)
Q18,38716.6,->  Hash Join  (cost=2891267.93..5614427.42 rows=30082809 width=39) (actual time=48873.873..65536.289 rows=777 loops=1)
Q18,36714.0,->  Hash  (cost=2062782.51..2062782.51 rows=4075255 width=4) (actual time=41600.968..41600.968 rows=111 loops=1)
Q18,36714.0,->  HashAggregate  (cost=1971089.27..2022029.96 rows=4075255 width=8) (actual time=36425.887..41600.601 rows=111 loops=1)
Q10,27956.4,->  Sort  (cost=2291786.23..2293184.05 rows=559129 width=176) (actual time=31124.526..31124.528 rows=20 loops=1)
Q9,26264.6,->  Sort  (cost=1123245.51..1123245.82 rows=124 width=46) (actual time=92916.235..93436.718 rows=3256812 loops=1)
Q9,26264.6,->  Nested Loop  (cost=66799.53..1123237.31 rows=124 width=24) (actual time=999.836..84215.418 rows=3256812 loops=1)
Q9,26264.6,->  Nested Loop  (cost=66799.10..1123177.22 rows=124 width=24) (actual time=999.805..52152.707 rows=3256812 loops=1)
Q9,26264.6,->  Nested Loop  (cost=66798.80..1123137.21 rows=124 width=28) (actual time=999.796..41558.259 rows=3256812 loops=1)
Q9,26264.6,->  Hash Join  (cost=66801.09..1123241.20 rows=124 width=46) (actual time=999.902..87418.447 rows=3256812 loops=1)
Q2,4771.0,->  Merge Join  (cost=465687.75..893611.49 rows=1 width=190) (actual time=6475.574..8286.262 rows=4771 loops=1)
Q21,4049.0,->  HashAggregate  (cost=2868526.22..2868526.23 rows=1 width=26) (actual time=38969.682..38970.755 rows=4049 loops=1)
Q15,3724.0,->  Subquery Scan on revenue10  (cost=2008345.20..2008428.99 rows=3724 width=12) (actual time=39229.173..39245.320 rows=1 loops=1)
Q15,3724.0,->  Sort  (cost=2008649.87..2008659.18 rows=3724 width=12) (actual time=39245.338..39245.339 rows=1 loops=1)
Q15,3724.0,Merge Join  (cost=4000272.80..4005369.87 rows=3724 width=79) (actual time=39252.408..39252.410 rows=1 loops=1)
Q15,3724.0,->  HashAggregate  (cost=2008345.20..2008391.75 rows=3724 width=12) (actual time=39229.172..39245.317 rows=1 loops=1)
Q7,767.5,Sort  (cost=2139389.66..2139397.34 rows=3070 width=64) (actual time=23422.312..23422.312 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2139165.80..2139211.85 rows=3070 width=64) (actual time=23422.248..23422.256 rows=4 loops=1)
Q8,365.0,Sort  (cost=1795379.18..1795381.01 rows=730 width=38) (actual time=10282.737..10282.737 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1795331.69..1795344.46 rows=730 width=38) (actual time=10282.698..10282.699 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2868526.24..2868526.24 rows=1 width=26) (actual time=38971.855..38971.861 rows=100 loops=1)
Q21,100.0,Limit  (cost=2868526.24..2868526.24 rows=1 width=26) (actual time=38971.857..38971.875 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=893611.50..893611.51 rows=1 width=190) (actual time=8291.259..8291.269 rows=100 loops=1)
Q2,100.0,Limit  (cost=893611.50..893611.51 rows=1 width=190) (actual time=8291.261..8291.283 rows=100 loops=1)
Q11,32.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8513.022..8514.197 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8426.056..8507.678 rows=9789 loops=1)
Q3,28.3,->  HashAggregate  (cost=2465507.52..2497567.71 rows=3206019 width=20) (actual time=34672.306..34717.922 rows=113247 loops=1)
Q15,26.8,->  HashAggregate  (cost=1991538.84..1991576.08 rows=3724 width=12) (actual time=18703.393..18734.548 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=742278)
Q14,14.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7576.67 rows=742867 width=0) (actual time=121.350..121.350 rows=10771200 loops=1)
Q3,10.7,->  Hash Join  (cost=770802.74..2417417.23 rows=3206019 width=20) (actual time=8302.349..34396.555 rows=299179 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2410.66 rows=319820 width=0) (actual time=34.917..34.917 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.017..0.082 rows=7 loops=434260)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.187..4.187 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q15,5.2,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.017..5.195 rows=18896 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1195694)
Q5,5.0,Sort  (cost=1874509.05..1874509.11 rows=25 width=34) (actual time=13728.778..13728.778 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1874508.22..1874508.47 rows=25 width=34) (actual time=13728.734..13728.734 rows=5 loops=1)
Q4,5.0,Sort  (cost=1495305.32..1495305.32 rows=1 width=16) (actual time=12596.612..12596.612 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573599)
Q4,5.0,->  HashAggregate  (cost=1495305.30..1495305.31 rows=1 width=16) (actual time=12596.565..12596.565 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=715261)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5706.07 rows=566607 width=0) (actual time=27.610..27.610 rows=2558720 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5837.71 rows=579771 width=0) (actual time=27.696..27.696 rows=2561280 loops=1)
Q13,4.3,Sort  (cost=849917.59..849918.09 rows=200 width=8) (actual time=29083.639..29083.641 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=849907.95..849909.95 rows=200 width=8) (actual time=29083.561..29083.571 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.009..0.011 rows=4 loops=455007)
Q17,3.7,->  Nested Loop  (cost=78.30..111880.65 rows=19694 width=4) (actual time=1.439..182.435 rows=5303 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5983.21..1494526.29 rows=155801 width=16) (actual time=27.937..12294.151 rows=526343 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=1971)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248195.99 rows=33073065 width=0) (actual time=119.767..119.767 rows=10771200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.272..0.342 rows=3 loops=21921)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54838.11 rows=7306415 width=0) (actual time=27.564..27.564 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=695287.73..695287.73 rows=3 width=20) (actual time=8756.160..8756.160 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642391.42..642391.46 rows=3 width=20) (actual time=8756.112..8756.114 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.058 rows=2 loops=6508)
Q20,2.0,->  Nested Loop  (cost=754.48..11668710.45 rows=29289 width=4) (actual time=13.435..7835.618 rows=59628 loops=1)
Q20,2.0,->  Hash  (cost=11668710.45..11668710.45 rows=29289 width=4) (actual time=7871.922..7871.922 rows=59628 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.215..4.215 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403422.73..404903.95 rows=592488 width=40) (actual time=10301.117..10442.716 rows=1186840 loops=1)
Q16,2.0,->  Hash Join  (cost=54730.84..346613.72 rows=592488 width=40) (actual time=993.760..6783.702 rows=1186840 loops=1)
Q12,2.0,Sort  (cost=3031999.68..3031999.69 rows=1 width=27) (actual time=34224.695..34224.695 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3031999.66..3031999.67 rows=1 width=27) (actual time=34224.640..34224.641 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346259.97..2257338.49 rows=559129 width=176) (actual time=6997.652..28856.023 rows=1121576 loops=1)
Q10,2.0,->  Hash Join  (cost=346258.41..2249648.90 rows=559129 width=154) (actual time=6997.623..28460.695 rows=1121576 loops=1)
Q10,2.0,->  Hash Join  (cost=277230.41..2172233.97 rows=559129 width=12) (actual time=5309.445..26077.490 rows=1121576 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1917655.33 rows=806989 width=34) (actual time=41.785..24815.490 rows=1535759 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.553..4254.875 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831524.94 rows=20174718 width=8) (actual time=0.013..18429.478 rows=37965325 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342509.75 rows=393641 width=38) (actual time=41.814..31891.345 rows=742278 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.037..0.505 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671519.55..11671522.48 rows=1172 width=51) (actual time=7902.674..7902.783 rows=1837 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669119.56..11671459.81 rows=1172 width=51) (actual time=7872.354..7900.122 rows=1837 loops=1)
Q1,1.5,Sort  (cost=4181382.96..4181382.98 rows=6 width=20) (actual time=90074.263..90074.264 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4181382.78..4181382.89 rows=6 width=20) (actual time=90074.215..90074.216 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1123245.51..1123249.85 rows=124 width=46) (actual time=92925.671..95573.344 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27380.25 rows=3645367 width=0) (actual time=27.557..27.557 rows=2561280 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.181..4.181 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2271316.72..2276908.01 rows=559129 width=176) (actual time=30773.562..30987.855 rows=375161 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.21 rows=140018 width=0) (actual time=743.384..743.384 rows=190506 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.22..41863.69 rows=140018 width=24) (actual time=752.153..1187.050 rows=190506 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91313.29 rows=9116529 width=0) (actual time=121.788..121.788 rows=10664960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102099 width=4) (actual time=0.011..957.947 rows=108565 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.24..351830.12 rows=407388 width=16) (actual time=999.754..5029.350 rows=434260 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102099 width=4) (actual time=999.260..999.260 rows=108565 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.591..1905.309 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=433.25..1747016.90 rows=127936 width=20) (actual time=7.155..7998.194 rows=120722 loops=1)
Q8,1.0,->  Nested Loop  (cost=432.82..1540440.53 rows=421876 width=16) (actual time=7.116..4247.000 rows=397079 loops=1)
Q8,1.0,->  Nested Loop  (cost=38763.69..1794338.63 rows=25587 width=16) (actual time=2002.960..10204.838 rows=24020 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.34 rows=31 width=20) (actual time=0.025..0.297 rows=30 loops=13278)
Q8,1.0,->  Hash Join  (cost=38765.26..1794819.95 rows=25587 width=38) (actual time=2003.002..10243.724 rows=24020 loops=1)
Q8,1.0,->  Hash Join  (cost=38763.40..1786082.68 rows=25587 width=16) (actual time=2002.944..10061.491 rows=24020 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1992.855..1992.855 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..428.77 rows=13913 width=0) (actual time=4.781..4.781 rows=13278 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=432.25..28820.87 rows=13913 width=4) (actual time=7.057..177.390 rows=13278 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.221..371.902 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.006..2940.062 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2126351.77 rows=1468483 width=42) (actual time=610.232..22659.049 rows=1453033 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2138249.12 rows=61112 width=64) (actual time=659.407..23324.632 rows=57651 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533422.40 rows=1208396 width=30) (actual time=609.988..8702.883 rows=1195694 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..571.094 rows=119897 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..46.679 rows=7947 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=609.502..609.502 rows=119897 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.953..48.953 rows=7947 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91512.78..1363107.68 rows=797986 width=8) (actual time=122.555..28492.217 rows=795615 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.705..1901.439 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=66299.16..1854515.54 rows=1845029 width=46) (actual time=2038.362..12952.354 rows=1820021 loops=1)
Q5,1.0,->  Hash Join  (cost=70978.16..1873770.24 rows=73798 width=34) (actual time=2093.948..13651.697 rows=72720 loops=1)
Q5,1.0,->  Hash Join  (cost=66298.60..390297.51 rows=461371 width=38) (actual time=2038.334..7329.168 rows=455007 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2008.597..2008.597 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27956.97..338691.47 rows=2306853 width=8) (actual time=27.729..4456.563 rows=2275908 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..370.321 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5982.65..270733.21 rows=579771 width=20) (actual time=27.894..4851.025 rows=573599 loops=1)
Q3,1.0,->  Hash Join  (cost=106479.09..495962.85 rows=1470051 width=12) (actual time=404.568..7706.345 rows=1442497 loops=1)
Q3,1.0,->  Hash  (cost=495962.85..495962.85 rows=1470051 width=12) (actual time=8175.401..8175.401 rows=1442497 loops=1)
Q3,1.0,->  Hash  (cost=46041.88..46041.88 rows=301800 width=4) (actual time=374.895..374.895 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6915.93 rows=301800 width=0) (actual time=65.170..65.170 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56664.72..404048.90 rows=7306415 width=16) (actual time=27.722..4964.379 rows=7214586 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256464.25..1746994.57 rows=33073065 width=12) (actual time=120.518..20904.360 rows=32632274 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6991.38..46041.88 rows=301800 width=4) (actual time=73.980..297.876 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.013..3487.097 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=7375.313..7375.313 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598405.02..641951.34 rows=58677 width=20) (actual time=8173.078..8729.188 rows=63333 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.57 rows=381678 width=0) (actual time=91.314..91.314 rows=381477 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6644.99..51942.03 rows=381678 width=4) (actual time=100.191..614.087 rows=381477 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.325..40.496 rows=4049 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.726..41.726 rows=4049 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.313..39.761 rows=4049 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6475.234..6604.968 rows=1586837 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..151.500 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8143 width=30) (actual time=0.096..961.263 rows=7964 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=163.204..5314.874 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=163.061..163.061 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.262..29.488 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.292..26.509 rows=4044 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.275..9.275 rows=21921 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.274..25.883 rows=4044 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.928..295.521 rows=21921 loops=1)
Q19,1.0,->  Nested Loop  (cost=12812.57..609305.73 rows=1127 width=8) (actual time=36.121..1421.369 rows=1162 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8074 width=0) (actual time=3.556..3.556 rows=8018 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7917 width=0) (actual time=3.650..3.650 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.35 rows=7864 width=0) (actual time=3.442..3.442 rows=8015 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12812.00..26441.75 rows=4729 width=30) (actual time=32.889..277.444 rows=4771 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..2829.301 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.18 rows=60165618 width=8) (actual time=0.009..6537.106 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.18 rows=60165618 width=8) (actual time=0.012..5818.463 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=1971)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=1971)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.05 rows=1962 width=0) (actual time=0.925..0.925 rows=1971 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.54..6512.09 rows=1962 width=4) (actual time=1.241..13.641 rows=1971 loops=1)
Q16,1.0,Sort  (cost=413162.69..413232.29 rows=27842 width=40) (actual time=11097.535..11100.740 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51002.40..51002.40 rows=296977 width=40) (actual time=991.242..991.242 rows=296880 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403422.73..411107.25 rows=27842 width=40) (actual time=10301.168..11037.737 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2484.90..51002.40 rows=296977 width=40) (actual time=34.983..882.157 rows=296880 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1969130.36 rows=2240848 width=12) (actual time=0.065..16929.398 rows=2248105 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1969130.36 rows=2240848 width=12) (actual time=0.055..18587.333 rows=2248105 loops=1)
Q14,1.0,->  Hash Join  (cost=93284.38..1138377.68 rows=742867 width=29) (actual time=1429.038..27028.996 rows=749833 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7762.38..1041712.68 rows=742867 width=12) (actual time=122.221..24919.970 rows=749833 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14954253 width=8) (actual time=0.017..8110.480 rows=14839234 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737636.68 rows=14954253 width=8) (actual time=863.171..18494.020 rows=15339255 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.013..4924.808 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2424731.97 rows=290013 width=15) (actual time=0.017..24202.771 rows=312999 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..3026924.43 rows=290013 width=27) (actual time=9389.110..33897.786 rows=312999 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=9343.502..9343.502 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..36.498 rows=3974 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..26.005 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.944..3853.123 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.607..4224.123 rows=317920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.544..37.544 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.869..26.869 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..25.361 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..35.862 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824307.70 rows=58926877 width=20) (actual time=0.010..19272.884 rows=58717949 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833349.69 rows=14950022 width=12) (actual time=0.012..17750.110 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270147.82..270147.82 rows=566607 width=8) (actual time=5306.027..5306.027 rows=560676 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5847.72..270147.82 rows=566607 width=8) (actual time=27.774..5125.623 rows=560676 loops=1)
