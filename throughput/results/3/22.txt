BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('21', '12', '15', '33', '19', '31', '10')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('21', '12', '15', '33', '19', '31', '10')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=694823.22..694823.23 rows=3 width=20) (actual time=9272.498..9272.499 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=265736 read=61362 written=9
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52964.18..52964.19 rows=1 width=4) (actual time=669.426..669.426 rows=1 loops=1)
           Buffers: shared hit=8 read=36336 written=9
           ->  Bitmap Heap Scan on customer customer_1  (cost=6678.32..52006.97 rows=382882 width=4) (actual time=100.845..597.345 rows=382775 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{21,12,15,33,19,31,10}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=8 read=36336 written=9
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.60 rows=382882 width=0) (actual time=91.555..91.555 rows=382775 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{21,12,15,33,19,31,10}'::text[]))
                       Buffers: shared hit=6 read=1060
   ->  HashAggregate  (cost=641858.96..641859.01 rows=3 width=20) (actual time=9272.450..9272.451 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=265733 read=61362 written=9
         ->  Hash Anti Join  (cost=597845.07..641417.50 rows=58862 width=20) (actual time=9047.448..9251.529 rows=63563 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=265733 read=61362 written=9
               ->  Bitmap Heap Scan on customer  (cost=2942.74..41907.81 rows=140460 width=24) (actual time=733.803..829.712 rows=191070 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{21,12,15,33,19,31,10}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35160
                     Buffers: shared hit=35177 read=36874 written=9
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.62 rows=140460 width=0) (actual time=724.827..724.827 rows=191070 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{21,12,15,33,19,31,10}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=17 read=36874 written=9
               ->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8246.408..8246.408 rows=15015000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658944kB
                     Buffers: shared hit=230553 read=24488
                     ->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.021..3694.483 rows=15015000 loops=1)
                           Buffers: shared hit=230553 read=24488
 Planning time: 2.729 ms
 Execution time: 9276.223 ms
(34 rows)

COMMIT;
COMMIT
