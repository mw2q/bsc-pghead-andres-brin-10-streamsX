BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'UNITED KINGDOM' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'PROMO PLATED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1750559.90..1750561.73 rows=730 width=38) (actual time=13794.816..13794.816 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=2000168 read=328135 dirtied=389 written=7893
   ->  HashAggregate  (cost=1750512.41..1750525.18 rows=730 width=38) (actual time=13794.775..13794.777 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=2000165 read=328135 dirtied=389 written=7893
         ->  Hash Join  (cost=38750.37..1750019.31 rows=24655 width=38) (actual time=2463.458..13753.077 rows=24323 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=2000165 read=328135 dirtied=389 written=7893
               ->  Nested Loop  (cost=38748.80..1749555.46 rows=24655 width=16) (actual time=2463.413..13710.817 rows=24323 loops=1)
                     Buffers: shared hit=2000161 read=328135 dirtied=389 written=7893
                     ->  Hash Join  (cost=38748.51..1741600.19 rows=24655 width=16) (actual time=2463.401..13562.164 rows=24323 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1927240 read=327946 dirtied=389 written=7893
                           ->  Nested Loop  (cost=418.36..1702561.21 rows=123276 width=20) (actual time=6.810..11024.112 rows=122055 loops=1)
                                 Buffers: shared hit=1756465 read=322323 dirtied=389 written=7893
                                 ->  Nested Loop  (cost=417.93..1503520.55 rows=406509 width=16) (actual time=6.752..5841.806 rows=401923 loops=1)
                                       Buffers: shared hit=234644 read=234205 dirtied=389 written=7315
                                       ->  Bitmap Heap Scan on part  (cost=417.36..28370.52 rows=13540 width=4) (actual time=6.704..172.061 rows=13406 loops=1)
                                             Recheck Cond: ((p_type)::text = 'PROMO PLATED BRASS'::text)
                                             Heap Blocks: exact=11436
                                             Buffers: shared hit=2655 read=8851 written=392
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.98 rows=13540 width=0) (actual time=4.435..4.435 rows=13406 loops=1)
                                                   Index Cond: ((p_type)::text = 'PROMO PLATED BRASS'::text)
                                                   Buffers: shared hit=1 read=69
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.64 rows=31 width=20) (actual time=0.030..0.412 rows=30 loops=13406)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=231989 read=225354 dirtied=389 written=6923
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=401923)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1521821 read=88118 written=578
                           ->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2454.200..2454.200 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=170775 read=5623
                                 ->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.688..2345.942 rows=300963 loops=1)
                                       Buffers: shared hit=170775 read=5623
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.025..0.054 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.009 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.656..459.094 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Rows Removed by Index Recheck: 1439807
                                             Heap Blocks: lossy=176390
                                             Buffers: shared hit=170773 read=5623
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.622..3.622 rows=353280 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=24323)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72921 read=189
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.014 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 5.354 ms
 Execution time: 13795.470 ms
(69 rows)

COMMIT;
COMMIT
