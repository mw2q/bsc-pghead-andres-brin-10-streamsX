Q21,708445.0,->  Nested Loop Semi Join  (cost=2406.31..2874274.59 rows=1 width=34) (actual time=36.831..38400.028 rows=708445 loops=1)
Q3,318232.7,->  Sort  (cost=2561574.09..2569529.91 rows=3182327 width=20) (actual time=34624.093..34624.094 rows=10 loops=1)
Q18,304773.8,->  GroupAggregate  (cost=10203924.52..11033671.35 rows=30172612 width=39) (actual time=69647.426..69647.751 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2188635.29..2804835.29 rows=7544952 width=39) (actual time=45263.616..50929.039 rows=99 loops=1)
Q18,76211.6,->  Hash Join  (cost=2119607.29..2622633.02 rows=7544952 width=20) (actual time=43993.741..49658.748 rows=99 loops=1)
Q18,76211.6,->  Hash  (cost=2804835.29..2804835.29 rows=7544952 width=39) (actual time=50929.311..50929.311 rows=99 loops=1)
Q18,43539.1,->  Sort  (cost=10203924.52..10279356.05 rows=30172612 width=39) (actual time=69647.414..69647.466 rows=693 loops=1)
Q18,43539.1,->  Hash Join  (cost=2899147.19..5630435.86 rows=30172612 width=39) (actual time=50969.006..69646.410 rows=693 loops=1)
Q18,41164.1,->  Hash  (cost=2068666.60..2068666.60 rows=4075255 width=4) (actual time=43871.833..43871.833 rows=99 loops=1)
Q18,41164.1,->  HashAggregate  (cost=1976973.36..2027914.05 rows=4075255 width=8) (actual time=38561.203..43871.576 rows=99 loops=1)
Q21,40061.0,->  Nested Loop Anti Join  (cost=2406.88..2874276.38 rows=1 width=26) (actual time=37.919..41275.088 rows=40061 loops=1)
Q9,28613.7,->  Sort  (cost=1061727.19..1061727.47 rows=114 width=46) (actual time=92157.202..92755.731 rows=3261963 loops=1)
Q9,28613.7,->  Nested Loop  (cost=66699.44..1061719.59 rows=114 width=24) (actual time=993.912..83125.220 rows=3261963 loops=1)
Q9,28613.7,->  Nested Loop  (cost=66699.01..1061664.34 rows=114 width=24) (actual time=993.874..53719.832 rows=3261963 loops=1)
Q9,28613.7,->  Nested Loop  (cost=66698.71..1061627.56 rows=114 width=28) (actual time=993.860..43371.039 rows=3261963 loops=1)
Q9,28613.7,->  Hash Join  (cost=66701.00..1061723.29 rows=114 width=46) (actual time=993.973..86320.254 rows=3261963 loops=1)
Q10,28577.7,->  Sort  (cost=2293508.51..2294937.39 rows=571554 width=176) (actual time=30200.607..30200.610 rows=20 loops=1)
Q2,4756.0,->  Merge Join  (cost=465687.75..886136.89 rows=1 width=190) (actual time=6699.451..8675.402 rows=4756 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2874276.38..2874276.39 rows=1 width=26) (actual time=41325.138..41326.198 rows=4009 loops=1)
Q15,3728.0,->  Subquery Scan on revenue3  (cost=1930553.30..1930637.18 rows=3728 width=12) (actual time=44997.494..45008.093 rows=1 loops=1)
Q15,3728.0,->  Sort  (cost=1930858.33..1930867.65 rows=3728 width=12) (actual time=45008.112..45008.113 rows=1 loops=1)
Q15,3728.0,Merge Join  (cost=3844522.01..3849619.14 rows=3728 width=79) (actual time=45023.462..45023.465 rows=1 loops=1)
Q15,3728.0,->  HashAggregate  (cost=1930553.30..1930599.90 rows=3728 width=12) (actual time=44997.493..45008.091 rows=1 loops=1)
Q7,767.5,Sort  (cost=2118936.32..2118944.00 rows=3070 width=64) (actual time=24581.009..24581.010 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2118712.46..2118758.51 rows=3070 width=64) (actual time=24580.942..24580.950 rows=4 loops=1)
Q8,365.0,Sort  (cost=1750559.90..1750561.73 rows=730 width=38) (actual time=13794.816..13794.816 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1750512.41..1750525.18 rows=730 width=38) (actual time=13794.775..13794.777 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=41327.322..41327.330 rows=100 loops=1)
Q21,100.0,Limit  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=41327.323..41327.340 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886136.90..886136.90 rows=1 width=190) (actual time=8680.379..8680.396 rows=100 loops=1)
Q2,100.0,Limit  (cost=886136.90..886136.90 rows=1 width=190) (actual time=8680.381..8680.409 rows=100 loops=1)
Q11,33.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8150.280..8151.390 rows=9467 loops=1)
Q11,33.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8068.636..8144.949 rows=9467 loops=1)
Q3,28.1,->  HashAggregate  (cost=2460981.88..2492805.15 rows=3182327 width=20) (actual time=34561.773..34603.141 rows=112934 loops=1)
Q15,26.8,->  HashAggregate  (cost=1913579.51..1913616.79 rows=3728 width=12) (actual time=24100.939..24132.367 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.007..0.007 rows=1 loops=735397)
Q14,13.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8040.55 rows=789255 width=0) (actual time=119.339..119.339 rows=10728960 loops=1)
Q3,10.6,->  Hash Join  (cost=770249.45..2413246.97 rows=3182327 width=20) (actual time=8044.629..34289.759 rows=298194 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2398.96 rows=318260 width=0) (actual time=34.860..34.860 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.085 rows=8 loops=434304)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.622..3.622 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1908077.76..1908077.83 rows=25 width=34) (actual time=15034.357..15034.357 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1908076.93..1908077.18 rows=25 width=34) (actual time=15034.314..15034.316 rows=5 loops=1)
Q4,5.0,Sort  (cost=1484657.49..1484657.49 rows=1 width=16) (actual time=14465.613..14465.613 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=573766)
Q4,5.0,->  HashAggregate  (cost=1484657.47..1484657.48 rows=1 width=16) (actual time=14465.564..14465.565 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=708445)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5786.10 rows=574610 width=0) (actual time=27.944..27.944 rows=2538240 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5831.98 rows=579198 width=0) (actual time=27.667..27.667 rows=2558720 loops=1)
Q13,4.3,Sort  (cost=853626.91..853627.41 rows=200 width=8) (actual time=26286.247..26286.249 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=853617.27..853619.27 rows=200 width=8) (actual time=26286.175..26286.183 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1202298)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=457866)
Q17,3.7,->  Nested Loop  (cost=83.14..116493.01 rows=20496 width=4) (actual time=1.883..230.155 rows=5474 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5930.32..1483878.46 rows=155801 width=16) (actual time=28.177..14148.133 rows=525924 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.037 rows=3 loops=2033)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..271187.00 rows=36138533 width=0) (actual time=119.455..119.455 rows=10771200 loops=1)
Q15,3.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..271187.00 rows=36138533 width=0) (actual time=119.369..119.369 rows=10771200 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246635.97 rows=32865062 width=0) (actual time=120.685..120.685 rows=10771200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.299..0.370 rows=3 loops=21719)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55216.22 rows=7356830 width=0) (actual time=27.618..27.618 rows=2561280 loops=1)
Q15,2.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.051..11.596 rows=37989 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44265.21 rows=5896694 width=0) (actual time=32.430..32.430 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=694823.22..694823.23 rows=3 width=20) (actual time=9272.498..9272.499 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641858.96..641859.01 rows=3 width=20) (actual time=9272.450..9272.451 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=677.99..10613351.35 rows=26626 width=4) (actual time=13.817..8370.528 rows=58994 loops=1)
Q20,2.2,->  Hash  (cost=10613351.35..10613351.35 rows=26626 width=4) (actual time=8405.555..8405.555 rows=58994 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.056 rows=2 loops=6404)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.203..4.203 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402978.75..404451.74 rows=589196 width=40) (actual time=10599.404..10781.695 rows=1185838 loops=1)
Q16,2.0,->  Hash Join  (cost=54659.10..346509.06 rows=589196 width=40) (actual time=1286.621..6904.526 rows=1185838 loops=1)
Q12,2.0,Sort  (cost=3053194.99..3053195.00 rows=1 width=27) (actual time=32080.643..32080.643 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053194.97..3053194.98 rows=1 width=27) (actual time=32080.590..32080.592 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346735.29..2258295.27 rows=571554 width=176) (actual time=6104.117..27887.746 rows=1146655 loops=1)
Q10,2.0,->  Hash Join  (cost=346733.72..2250434.84 rows=571554 width=154) (actual time=6104.089..27474.277 rows=1146655 loops=1)
Q10,2.0,->  Hash Join  (cost=277705.72..2172833.53 rows=571554 width=12) (actual time=4745.865..25425.220 rows=1146655 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.542..4079.458 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835177.86 rows=20214956 width=8) (actual time=0.012..18202.745 rows=37927978 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347189.19 rows=394426 width=38) (actual time=36.741..32898.479 rows=735397 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921475.24 rows=808598 width=34) (actual time=36.698..24426.483 rows=1521660 loops=1)
Q20,1.7,Sort  (cost=10616118.05..10616120.71 rows=1065 width=51) (actual time=8437.701..8437.799 rows=1831 loops=1)
Q20,1.7,->  Hash Semi Join  (cost=10613727.17..10616064.50 rows=1065 width=51) (actual time=8405.987..8436.156 rows=1831 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.061..0.496 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1061727.19..1061731.18 rows=114 width=46) (actual time=92167.172..94967.841 rows=175 loops=1)
Q1,1.5,Sort  (cost=4168340.45..4168340.46 rows=6 width=20) (actual time=89624.763..89624.764 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4168340.27..4168340.37 rows=6 width=20) (actual time=89624.716..89624.717 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.180..4.180 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2272584.12..2278299.66 rows=571554 width=176) (actual time=29846.828..30061.769 rows=381540 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.62 rows=140460 width=0) (actual time=724.827..724.827 rows=191070 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.74..41907.81 rows=140460 width=24) (actual time=733.803..829.712 rows=191070 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.423..9.423 rows=21719 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.012..953.015 rows=108576 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351410.54 rows=375439 width=16) (actual time=993.820..5287.118 rows=434304 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=993.315..993.315 rows=108576 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92075.86 rows=9192786 width=0) (actual time=122.782..122.782 rows=10676480 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.688..2345.942 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=418.36..1702561.21 rows=123276 width=20) (actual time=6.810..11024.112 rows=122055 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.93..1503520.55 rows=406509 width=16) (actual time=6.752..5841.806 rows=401923 loops=1)
Q8,1.0,->  Nested Loop  (cost=38748.80..1749555.46 rows=24655 width=16) (actual time=2463.413..13710.817 rows=24323 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.64 rows=31 width=20) (actual time=0.030..0.412 rows=30 loops=13406)
Q8,1.0,->  Hash Join  (cost=38750.37..1750019.31 rows=24655 width=38) (actual time=2463.458..13753.077 rows=24323 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.51..1741600.19 rows=24655 width=16) (actual time=2463.401..13562.164 rows=24323 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2454.200..2454.200 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.98 rows=13540 width=0) (actual time=4.435..4.435 rows=13406 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.36..28370.52 rows=13540 width=4) (actual time=6.704..172.061 rows=13406 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.656..459.094 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3504.539 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1462667 width=42) (actual time=642.590..23734.646 rows=1460491 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117799.41 rows=60870 width=64) (actual time=709.643..24484.523 rows=57716 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=642.525..9954.798 rows=1202298 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.088..598.646 rows=120177 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..63.436 rows=7897 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=642.008..642.008 rows=120177 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=66.701..66.701 rows=7897 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92277.35..1366658.04 rows=805970 width=8) (actual time=123.559..22461.472 rows=794989 loops=1)
Q5,1.0,->  Nested Loop  (cost=83178.35..1888237.28 rows=1826591 width=46) (actual time=2182.313..14126.789 rows=1830372 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.684..2038.728 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87857.35..1907346.32 rows=73061 width=34) (actual time=2236.220..14955.143 rows=73114 loops=1)
Q5,1.0,->  Hash Join  (cost=83177.78..438534.89 rows=456755 width=38) (actual time=2182.293..8186.960 rows=457866 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2147.638..2147.638 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44836.15..387061.56 rows=2283773 width=8) (actual time=32.625..4972.124 rows=2284056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..397.557 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5929.76..268323.91 rows=574610 width=20) (actual time=28.127..5401.450 rows=573766 loops=1)
Q3,1.0,->  Hash Join  (cost=106755.21..497041.93 rows=1468423 width=12) (actual time=744.347..7453.591 rows=1449203 loops=1)
Q3,1.0,->  Hash  (cost=497041.93..497041.93 rows=1468423 width=12) (actual time=7916.744..7916.744 rows=1449203 loops=1)
Q3,1.0,->  Hash  (cost=45957.28..45957.28 rows=299400 width=4) (actual time=714.714..714.714 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.93 rows=299400 width=0) (actual time=67.799..67.799 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57055.43..405069.81 rows=7356830 width=16) (actual time=27.780..4291.592 rows=7264691 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254852.23..1742782.51 rows=32865062 width=12) (actual time=121.435..20341.977 rows=32432508 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.78..45957.28 rows=299400 width=4) (actual time=76.664..619.736 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.021..3694.483 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8246.408..8246.408 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597845.07..641417.50 rows=58862 width=20) (actual time=9047.448..9251.529 rows=63563 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.60 rows=382882 width=0) (actual time=91.555..91.555 rows=382775 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6678.32..52006.97 rows=382882 width=4) (actual time=100.845..597.345 rows=382775 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.276..35.542 rows=4009 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.648..36.648 rows=4009 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.264..34.884 rows=4009 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6699.104..6821.723 rows=1604017 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.305..131.682 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7951 width=30) (actual time=0.117..1170.299 rows=8044 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=142.436..5568.695 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.301..142.301 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..25.471 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.285..28.927 rows=4095 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.269..28.327 rows=4095 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20019 width=4) (actual time=13.119..308.234 rows=21719 loops=1)
Q19,1.0,->  Nested Loop  (cost=12830.18..613808.03 rows=1136 width=8) (actual time=34.657..1655.211 rows=1143 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.198..4.198 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.87 rows=8016 width=0) (actual time=3.498..3.498 rows=8011 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8003 width=0) (actual time=3.737..3.737 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7986 width=0) (actual time=3.736..3.736 rows=8055 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12829.62..26546.06 rows=4767 width=30) (actual time=33.218..127.532 rows=4740 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.006..2749.314 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675247.24 rows=60345224 width=8) (actual time=0.005..9190.580 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675247.24 rows=60345224 width=8) (actual time=0.071..8681.432 rows=60045826 loops=1)
Q18,1.0,Limit  (cost=10203924.52..10203927.27 rows=100 width=39) (actual time=69647.429..69647.763 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.045 rows=30 loops=2033)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.045 rows=30 loops=2033)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.87 rows=2044 width=0) (actual time=1.144..1.144 rows=2033 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.38..6753.06 rows=2044 width=4) (actual time=1.586..42.483 rows=2033 loops=1)
Q16,1.0,Sort  (cost=412663.45..412732.66 rows=27687 width=40) (actual time=11464.607..11467.816 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50951.29..50951.29 rows=295327 width=40) (actual time=1284.153..1284.153 rows=296625 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402978.75..410620.57 rows=27687 width=40) (actual time=10599.475..11405.089 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2472.79..50951.29 rows=295327 width=40) (actual time=34.911..1161.981 rows=296625 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=271752.79..1890947.79 rows=2263172 width=12) (actual time=120.150..22025.021 rows=2246691 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=271752.79..1890947.79 rows=2263172 width=12) (actual time=120.275..18950.705 rows=2246691 loops=1)
Q14,1.0,->  Hash Join  (cost=93759.87..1155999.35 rows=789255 width=29) (actual time=1699.428..21446.695 rows=772388 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8237.87..1058638.53 rows=789255 width=12) (actual time=120.268..19149.513 rows=772388 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15073674 width=8) (actual time=0.018..7408.166 rows=14838885 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740748.90 rows=15073674 width=8) (actual time=787.502..16968.930 rows=15338907 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.012..4089.112 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441626.55 rows=293399 width=15) (actual time=0.053..22845.161 rows=312313 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3048060.49 rows=293399 width=27) (actual time=8683.430..31801.555 rows=312313 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=8629.103..8629.103 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..35.995 rows=3988 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..26.042 rows=3988 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.958..3700.021 rows=319040 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.024..4021.419 rows=319040 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=36.955..36.955 rows=3988 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.882..26.882 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..25.442 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.289..35.340 rows=3988 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.23 rows=58691626 width=20) (actual time=0.014..19124.617 rows=58538916 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833349.69 rows=14950022 width=12) (actual time=0.015..17667.737 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270465.75..270465.75 rows=579198 width=8) (actual time=4742.521..4742.521 rows=573798 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5976.78..270465.75 rows=579198 width=8) (actual time=27.832..4571.494 rows=573798 loops=1)
