Q21,694237.0,->  Nested Loop Semi Join  (cost=2406.31..2874274.59 rows=1 width=34) (actual time=37.658..37722.823 rows=694237 loops=1)
Q3,316637.2,->  Sort  (cost=2532040.89..2539956.82 rows=3166372 width=20) (actual time=33983.427..33983.430 rows=10 loops=1)
Q18,302620.7,->  GroupAggregate  (cost=10234093.07..11066300.22 rows=30262078 width=39) (actual time=68116.153..68116.482 rows=100 loops=1)
Q18,75674.8,->  Hash Join  (cost=2194497.25..2812416.03 rows=7567488 width=39) (actual time=43839.667..49815.514 rows=100 loops=1)
Q18,75674.8,->  Hash Join  (cost=2125469.25..2629875.71 rows=7567488 width=20) (actual time=42914.121..48889.676 rows=100 loops=1)
Q18,75674.8,->  Hash  (cost=2812416.03..2812416.03 rows=7567488 width=39) (actual time=49815.704..49815.704 rows=100 loops=1)
Q18,43231.5,->  Sort  (cost=10234093.07..10309748.27 rows=30262078 width=39) (actual time=68116.143..68116.186 rows=700 loops=1)
Q18,43231.5,->  Hash Join  (cost=2907009.63..5646396.90 rows=30262078 width=39) (actual time=50026.021..68115.128 rows=700 loops=1)
Q18,40752.5,->  Hash  (cost=2074528.56..2074528.56 rows=4075255 width=4) (actual time=42815.045..42815.045 rows=100 loops=1)
Q18,40752.5,->  HashAggregate  (cost=1982835.32..2033776.01 rows=4075255 width=8) (actual time=37523.383..42814.810 rows=100 loops=1)
Q21,39079.0,->  Nested Loop Anti Join  (cost=2406.88..2874276.38 rows=1 width=26) (actual time=38.415..40548.323 rows=39079 loops=1)
Q10,28077.2,->  Sort  (cost=2273036.08..2274439.94 rows=561544 width=176) (actual time=32096.307..32096.308 rows=20 loops=1)
Q9,26049.4,->  Sort  (cost=1137369.64..1137369.95 rows=125 width=46) (actual time=91121.795..91664.179 rows=3256178 loops=1)
Q9,26049.4,->  Nested Loop  (cost=66824.55..1137361.38 rows=125 width=24) (actual time=988.982..82218.425 rows=3256178 loops=1)
Q9,26049.4,->  Nested Loop  (cost=66824.12..1137300.80 rows=125 width=24) (actual time=988.966..50498.033 rows=3256178 loops=1)
Q9,26049.4,->  Nested Loop  (cost=66823.83..1137260.46 rows=125 width=28) (actual time=988.956..39960.251 rows=3256178 loops=1)
Q9,26049.4,->  Hash Join  (cost=66826.12..1137365.28 rows=125 width=46) (actual time=989.035..85478.315 rows=3256178 loops=1)
Q2,4768.0,->  Merge Join  (cost=465687.75..886527.72 rows=1 width=190) (actual time=6249.901..8184.778 rows=4768 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2874276.38..2874276.39 rows=1 width=26) (actual time=40600.830..40601.857 rows=3933 loops=1)
Q15,3773.0,->  Subquery Scan on revenue6  (cost=1316111.68..1316196.57 rows=3773 width=12) (actual time=47274.798..47278.907 rows=1 loops=1)
Q15,3773.0,->  Sort  (cost=1316420.72..1316430.15 rows=3773 width=12) (actual time=47278.926..47278.927 rows=1 loops=1)
Q15,3773.0,Merge Join  (cost=2615573.41..2620671.21 rows=3773 width=79) (actual time=47305.269..47305.271 rows=1 loops=1)
Q15,3773.0,->  HashAggregate  (cost=1316111.68..1316158.84 rows=3773 width=12) (actual time=47274.796..47278.904 rows=1 loops=1)
Q7,767.5,Sort  (cost=2141498.19..2141505.86 rows=3070 width=64) (actual time=24735.108..24735.108 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2141274.32..2141320.37 rows=3070 width=64) (actual time=24735.044..24735.050 rows=4 loops=1)
Q8,365.0,Sort  (cost=1740655.96..1740657.79 rows=730 width=38) (actual time=11907.550..11907.551 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1740608.47..1740621.25 rows=730 width=38) (actual time=11907.509..11907.511 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=40602.975..40602.981 rows=100 loops=1)
Q21,100.0,Limit  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=40602.977..40602.995 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886527.73..886527.73 rows=1 width=190) (actual time=8189.684..8189.702 rows=100 loops=1)
Q2,100.0,Limit  (cost=886527.73..886527.73 rows=1 width=190) (actual time=8189.686..8189.710 rows=100 loops=1)
Q11,36.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7959.570..7960.615 rows=8685 loops=1)
Q11,36.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7853.469..7954.713 rows=8685 loops=1)
Q3,27.8,->  HashAggregate  (cost=2431953.01..2463616.73 rows=3166372 width=20) (actual time=33910.376..33962.460 rows=113513 loops=1)
Q15,26.5,->  HashAggregate  (cost=1299067.50..1299105.23 rows=3773 width=12) (actual time=22521.232..22554.399 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=720703)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7910.23 rows=776223 width=0) (actual time=119.621..119.621 rows=10771200 loops=1)
Q3,10.5,->  Hash Join  (cost=763597.58..2384457.43 rows=3166372 width=20) (actual time=7590.814..33638.982 rows=299747 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2412.61 rows=320080 width=0) (actual time=34.944..34.944 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.078 rows=7 loops=434212)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.608..3.608 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.593..3.593 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.236..0.236 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.277..0.277 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1197587)
Q5,5.0,Sort  (cost=1874509.05..1874509.11 rows=25 width=34) (actual time=15252.654..15252.654 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1874508.22..1874508.47 rows=25 width=34) (actual time=15252.610..15252.611 rows=5 loops=1)
Q4,5.0,Sort  (cost=1486680.09..1486680.09 rows=1 width=16) (actual time=13556.601..13556.602 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573934)
Q4,5.0,->  HashAggregate  (cost=1486680.07..1486680.08 rows=1 width=16) (actual time=13556.555..13556.557 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=694237)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5770.26 rows=573026 width=0) (actual time=27.685..27.685 rows=2553600 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5730.46 rows=569046 width=0) (actual time=27.388..27.388 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=847864.30..847864.80 rows=200 width=8) (actual time=29368.887..29368.889 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847854.66..847856.66 rows=200 width=8) (actual time=29368.820..29368.829 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=455007)
Q17,3.7,->  Nested Loop  (cost=82.73..114250.15 rows=20255 width=4) (actual time=1.599..201.044 rows=5421 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5914.08..1485907.84 rows=154446 width=16) (actual time=27.895..13255.209 rows=525898 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=2018)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240910.98 rows=32101731 width=0) (actual time=125.167..125.167 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.289..0.359 rows=3 loops=21625)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55587.04 rows=7406273 width=0) (actual time=27.757..27.757 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=696074.35..696074.36 rows=3 width=20) (actual time=8809.952..8809.952 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643070.41..643070.46 rows=3 width=20) (actual time=8809.908..8809.910 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=677.99..10613351.35 rows=26626 width=4) (actual time=13.035..8062.650 rows=58672 loops=1)
Q20,2.2,->  Hash  (cost=10613351.35..10613351.35 rows=26626 width=4) (actual time=8098.072..8098.072 rows=58672 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6549)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.197..4.197 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3053189.63..3053189.63 rows=1 width=27) (actual time=34141.327..34141.328 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053189.61..3053189.62 rows=1 width=27) (actual time=34141.273..34141.273 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403383.03..404863.24 rows=592085 width=40) (actual time=9879.013..10020.577 rows=1182832 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.538..3826.397 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54736.72..346615.57 rows=592085 width=40) (actual time=988.275..6348.300 rows=1182832 loops=1)
Q10,1.9,->  Hash Join  (cost=344073.05..2238439.55 rows=561544 width=176) (actual time=9665.677..30029.387 rows=1079367 loops=1)
Q10,1.9,->  Hash Join  (cost=344071.49..2230716.76 rows=561544 width=154) (actual time=9665.649..29662.934 rows=1079367 loops=1)
Q10,1.9,->  Hash Join  (cost=275043.49..2153265.60 rows=561544 width=12) (actual time=8370.308..27575.755 rows=1079367 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835177.86 rows=20214956 width=8) (actual time=0.012..18807.005 rows=37927978 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347189.19 rows=394426 width=38) (actual time=37.583..33025.498 rows=720703 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921475.24 rows=808598 width=34) (actual time=37.482..25427.256 rows=1491778 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.040..0.493 rows=56 loops=1)
Q20,1.5,Sort  (cost=10616118.05..10616120.71 rows=1065 width=51) (actual time=8131.070..8131.167 rows=1702 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=10613727.17..10616064.50 rows=1065 width=51) (actual time=8098.537..8129.582 rows=1702 loops=1)
Q1,1.5,Sort  (cost=4233041.01..4233041.02 rows=6 width=20) (actual time=90713.075..90713.076 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4233040.82..4233040.93 rows=6 width=20) (actual time=90713.027..90713.029 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2252478.15..2258093.59 rows=561544 width=176) (actual time=31775.982..31962.624 rows=371123 loops=1)
Q9,1.4,GroupAggregate  (cost=1137369.64..1137374.01 rows=125 width=46) (actual time=91131.279..93808.504 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27380.25 rows=3645367 width=0) (actual time=27.451..27.451 rows=2561280 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..19.431 rows=70888 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2911.61 rows=140858 width=0) (actual time=732.057..732.057 rows=191045 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2946.83..41922.35 rows=140858 width=24) (actual time=740.680..890.397 rows=191045 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=8.854..8.854 rows=21625 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91677.79 rows=9152979 width=0) (actual time=123.409..123.409 rows=10708480 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..69154.93 rows=9200924 width=0) (actual time=118.591..118.591 rows=10686720 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..69154.93 rows=9200924 width=0) (actual time=118.256..118.256 rows=10686720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104101 width=4) (actual time=0.010..946.670 rows=108553 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.26..351935.02 rows=415376 width=16) (actual time=988.882..5099.772 rows=434212 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104101 width=4) (actual time=988.397..988.397 rows=108553 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.714..1934.896 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.77..1692680.71 rows=122973 width=20) (actual time=7.472..9552.005 rows=123084 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.34..1494124.33 rows=405511 width=16) (actual time=7.236..4938.810 rows=405442 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.21..1739653.85 rows=24595 width=16) (actual time=2047.053..11821.451 rows=24665 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.77..1740116.57 rows=24595 width=38) (actual time=2047.098..11865.013 rows=24665 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.92..1731717.96 rows=24595 width=16) (actual time=2047.030..11671.665 rows=24665 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2037.599..2037.599 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.32 rows=13453 width=0) (actual time=4.788..4.788 rows=13476 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.021..0.021 rows=30 loops=13476)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.69..28266.65 rows=13453 width=4) (actual time=7.099..414.674 rows=13476 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.036..0.321 rows=30 loops=13476)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.641..377.862 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.004..3026.960 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2128451.30 rows=1469935 width=42) (actual time=1020.075..23922.644 rows=1456418 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2140356.73 rows=61173 width=64) (actual time=1078.245..24637.924 rows=58224 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=1020.049..9748.870 rows=1197587 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..959.206 rows=119794 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.044..54.395 rows=7995 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=1019.327..1019.327 rows=119794 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=57.274..57.274 rows=7995 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91878.41..1368557.43 rows=802480 width=8) (actual time=124.274..24664.207 rows=794925 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.715..1877.925 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=66299.16..1854515.54 rows=1845029 width=46) (actual time=2014.827..14409.808 rows=1820021 loops=1)
Q5,1.0,->  Hash Join  (cost=70978.16..1873770.24 rows=73798 width=34) (actual time=2073.707..15169.036 rows=72720 loops=1)
Q5,1.0,->  Hash Join  (cost=66298.60..390297.51 rows=461371 width=38) (actual time=2014.781..7584.074 rows=455007 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=1985.158..1985.158 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27956.97..338691.47 rows=2306853 width=8) (actual time=27.620..4664.437 rows=2275908 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.622..365.732 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5913.51..269803.90 rows=573026 width=20) (actual time=27.866..5756.385 rows=573934 loops=1)
Q3,1.0,->  Hash Join  (cost=107178.23..496130.05 rows=1482489 width=12) (actual time=394.375..6994.832 rows=1477881 loops=1)
Q3,1.0,->  Hash  (cost=496130.05..496130.05 rows=1482489 width=12) (actual time=7458.529..7458.529 rows=1477881 loops=1)
Q3,1.0,->  Hash  (cost=45986.49..45986.49 rows=300250 width=4) (actual time=364.479..364.479 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6880.30 rows=300250 width=0) (actual time=65.483..65.483 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57438.61..403792.03 rows=7406273 width=16) (actual time=27.916..4262.587 rows=7390327 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248936.41..1717751.05 rows=32101731 width=12) (actual time=125.920..20882.310 rows=31990430 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6955.36..45986.49 rows=300250 width=4) (actual time=74.293..288.412 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.015..3817.393 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7748.485..7748.485 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599031.77..642627.69 rows=59029 width=20) (actual time=8534.838..8787.301 rows=63548 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6590.79 rows=383968 width=0) (actual time=87.893..87.893 rows=381741 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6686.78..52043.94 rows=383968 width=4) (actual time=96.724..604.621 rows=381741 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.299..36.341 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=37.416..37.416 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.287..35.723 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6249.027..6368.909 rows=1602748 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.292..145.494 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7961 width=30) (actual time=0.517..1139.362 rows=7963 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=156.995..5159.905 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=156.840..156.840 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..28.234 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.271..29.624 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.256..29.025 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20019 width=4) (actual time=12.432..264.841 rows=21625 loops=1)
Q19,1.0,->  Nested Loop  (cost=12831.44..615348.09 rows=1139 width=8) (actual time=33.321..1600.970 rows=1113 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.185..4.185 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.59 rows=8089 width=0) (actual time=3.671..3.671 rows=8026 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8044 width=0) (actual time=3.751..3.751 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=8000 width=0) (actual time=3.476..3.476 rows=8051 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12830.88..26580.40 rows=4780 width=30) (actual time=33.064..126.864 rows=4776 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.006..2443.167 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680214.55 rows=60524155 width=8) (actual time=0.004..8574.399 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680214.55 rows=60524155 width=8) (actual time=0.011..7399.652 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.042 rows=30 loops=2018)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.042 rows=30 loops=2018)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.47 rows=2004 width=0) (actual time=0.889..0.889 rows=2018 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.97..6637.80 rows=2004 width=4) (actual time=1.235..32.933 rows=2018 loops=1)
Q16,1.0,Sort  (cost=413116.22..413185.77 rows=27823 width=40) (actual time=10671.544..10674.860 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51010.80..51010.80 rows=296775 width=40) (actual time=985.757..985.757 rows=295878 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403383.03..411062.32 rows=27823 width=40) (actual time=9879.063..10612.396 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2486.80..51010.80 rows=296775 width=40) (actual time=34.997..875.792 rows=295878 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=69723.07..1276341.93 rows=2272557 width=12) (actual time=119.043..20449.652 rows=2244081 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=69723.07..1276341.93 rows=2272557 width=12) (actual time=119.381..22604.744 rows=2244081 loops=1)
Q14,1.0,->  Hash Join  (cost=93626.28..1153413.02 rows=776223 width=29) (actual time=1341.393..22934.597 rows=748282 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8104.28..1056247.67 rows=776223 width=12) (actual time=120.462..21006.161 rows=748282 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14939823 width=8) (actual time=0.019..8065.584 rows=14854695 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735655.55 rows=14939823 width=8) (actual time=1138.149..18684.902 rows=15354714 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.010..5030.651 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441626.55 rows=293289 width=15) (actual time=0.238..23492.126 rows=310878 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3048057.05 rows=293289 width=27) (actual time=10007.112..33826.750 rows=310878 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=9947.158..9947.158 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.314..40.891 rows=4049 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.310..26.341 rows=4049 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.326..3271.797 rows=323920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=42.093..4214.803 rows=323920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.954..41.954 rows=4049 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.214..27.214 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..25.694 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.298..40.193 rows=4049 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=59946574 width=20) (actual time=0.014..19268.083 rows=59300580 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817042.75 rows=14817047 width=12) (actual time=0.011..15957.811 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=267930.41..267930.41 rows=569046 width=8) (actual time=8366.858..8366.858 rows=561335 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5872.72..267930.41 rows=569046 width=8) (actual time=27.568..8115.628 rows=561335 loops=1)
