Q21,703661.0,->  Nested Loop Semi Join  (cost=2406.31..2848593.30 rows=1 width=34) (actual time=33.389..37459.428 rows=703661 loops=1)
Q18,356379.1,->  GroupAggregate  (cost=10244252.77..11077289.04 rows=30292228 width=39) (actual time=67837.806..67838.085 rows=85 loops=1)
Q3,319436.0,->  Sort  (cost=2554947.08..2562932.98 rows=3194360 width=20) (actual time=32761.510..32761.511 rows=10 loops=1)
Q18,89117.4,->  Hash Join  (cost=2196472.75..2814962.94 rows=7574980 width=39) (actual time=42164.240..49540.724 rows=85 loops=1)
Q18,89117.4,->  Hash Join  (cost=2127444.75..2632310.24 rows=7574980 width=20) (actual time=40986.413..48362.587 rows=85 loops=1)
Q18,89117.4,->  Hash  (cost=2814962.94..2814962.94 rows=7574980 width=39) (actual time=49540.968..49540.968 rows=85 loops=1)
Q18,50911.3,->  Sort  (cost=10244252.77..10319983.34 rows=30292228 width=39) (actual time=67837.787..67837.820 rows=595 loops=1)
Q18,50911.3,->  Hash Join  (cost=2909650.19..5651766.71 rows=30292228 width=39) (actual time=49725.165..67836.906 rows=595 loops=1)
Q18,47944.1,->  Hash  (cost=2076504.06..2076504.06 rows=4075255 width=4) (actual time=40901.916..40901.916 rows=85 loops=1)
Q18,47944.1,->  HashAggregate  (cost=1984810.82..2035751.51 rows=4075255 width=8) (actual time=36057.873..40901.703 rows=85 loops=1)
Q21,39492.0,->  Nested Loop Anti Join  (cost=2406.88..2848595.08 rows=1 width=26) (actual time=34.737..40324.811 rows=39492 loops=1)
Q10,28673.4,->  Sort  (cost=2291640.39..2293074.06 rows=573468 width=176) (actual time=30990.741..30990.742 rows=20 loops=1)
Q9,23372.0,->  Sort  (cost=1228630.37..1228630.72 rows=140 width=46) (actual time=92077.392..92643.966 rows=3272083 loops=1)
Q9,23372.0,->  Nested Loop  (cost=66974.71..1228621.19 rows=140 width=24) (actual time=940.073..82988.916 rows=3272083 loops=1)
Q9,23372.0,->  Nested Loop  (cost=66974.27..1228553.34 rows=140 width=24) (actual time=940.055..50786.332 rows=3272083 loops=1)
Q9,23372.0,->  Nested Loop  (cost=66973.98..1228508.17 rows=140 width=28) (actual time=940.043..40131.091 rows=3272083 loops=1)
Q9,23372.0,->  Hash Join  (cost=66976.27..1228625.38 rows=140 width=46) (actual time=940.140..86260.354 rows=3272083 loops=1)
Q2,4851.0,->  Merge Join  (cost=465687.75..885110.96 rows=1 width=190) (actual time=6381.325..8372.586 rows=4851 loops=1)
Q21,3981.0,->  HashAggregate  (cost=2848595.09..2848595.10 rows=1 width=26) (actual time=40374.925..40375.975 rows=3981 loops=1)
Q15,3729.0,->  Subquery Scan on revenue4  (cost=1384168.20..1384252.10 rows=3729 width=12) (actual time=45892.408..45899.740 rows=1 loops=1)
Q15,3729.0,->  Sort  (cost=1384473.32..1384482.64 rows=3729 width=12) (actual time=45899.784..45899.784 rows=1 loops=1)
Q15,3729.0,Merge Join  (cost=2751878.55..2756975.68 rows=3729 width=79) (actual time=45916.775..45916.778 rows=1 loops=1)
Q15,3729.0,->  HashAggregate  (cost=1384168.20..1384214.81 rows=3729 width=12) (actual time=45892.407..45899.738 rows=1 loops=1)
Q7,767.5,Sort  (cost=2147815.42..2147823.09 rows=3070 width=64) (actual time=25097.563..25097.563 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2147591.55..2147637.60 rows=3070 width=64) (actual time=25097.502..25097.508 rows=4 loops=1)
Q8,365.0,Sort  (cost=1745551.33..1745553.16 rows=730 width=38) (actual time=11756.574..11756.575 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1745503.84..1745516.61 rows=730 width=38) (actual time=11756.534..11756.535 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2848595.11..2848595.11 rows=1 width=26) (actual time=40377.127..40377.133 rows=100 loops=1)
Q21,100.0,Limit  (cost=2848595.11..2848595.11 rows=1 width=26) (actual time=40377.129..40377.147 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885110.97..885110.98 rows=1 width=190) (actual time=8377.457..8377.472 rows=100 loops=1)
Q2,100.0,Limit  (cost=885110.97..885110.98 rows=1 width=190) (actual time=8377.457..8377.480 rows=100 loops=1)
Q11,32.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8445.028..8446.216 rows=9964 loops=1)
Q11,32.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8363.176..8439.598 rows=9964 loops=1)
Q3,28.1,->  HashAggregate  (cost=2453974.51..2485918.11 rows=3194360 width=20) (actual time=32699.708..32740.395 rows=113530 loops=1)
Q15,26.8,->  HashAggregate  (cost=1367321.02..1367358.31 rows=3729 width=12) (actual time=20268.989..20299.075 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=730363)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7714.49 rows=756649 width=0) (actual time=119.123..119.123 rows=10686720 loops=1)
Q3,10.6,->  Hash Join  (cost=770023.24..2406059.11 rows=3194360 width=20) (actual time=8078.755..32428.106 rows=299786 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2418.36 rows=320847 width=0) (actual time=34.985..34.985 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.078 rows=8 loops=435464)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.682..3.682 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1196972)
Q5,5.0,Sort  (cost=1906105.89..1906105.96 rows=25 width=34) (actual time=18700.836..18700.837 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1906105.06..1906105.31 rows=25 width=34) (actual time=18700.794..18700.795 rows=5 loops=1)
Q4,5.0,Sort  (cost=1499466.08..1499466.08 rows=1 width=16) (actual time=13783.851..13783.851 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.00 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574301)
Q4,5.0,->  HashAggregate  (cost=1499466.06..1499466.07 rows=1 width=16) (actual time=13783.802..13783.804 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703661)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5909.35 rows=586935 width=0) (actual time=32.985..32.985 rows=2548480 loops=1)
Q13,4.3,Sort  (cost=853027.21..853027.71 rows=200 width=8) (actual time=28945.119..28945.122 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=853017.57..853019.57 rows=200 width=8) (actual time=28945.047..28945.057 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5851.41 rows=581141 width=0) (actual time=27.597..27.597 rows=2556160 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.83..114752.28 rows=20206 width=4) (actual time=1.493..189.537 rows=5214 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.018..0.020 rows=4 loops=456081)
Q4,3.3,->  Nested Loop Semi Join  (cost=6056.65..1498673.50 rows=158511 width=16) (actual time=33.218..13485.979 rows=526331 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.039 rows=3 loops=1975)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243367.35 rows=32429247 width=0) (actual time=120.232..120.232 rows=10771200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.314..0.385 rows=3 loops=21869)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..56010.26 rows=7462701 width=0) (actual time=27.562..27.562 rows=2561280 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44221.12 rows=5890816 width=0) (actual time=27.203..27.203 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=696884.59..696884.59 rows=3 width=20) (actual time=9363.096..9363.097 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644097.11..644097.15 rows=3 width=20) (actual time=9363.047..9363.047 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.024..12.724 rows=42993 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.058 rows=2 loops=6573)
Q20,2.0,->  Nested Loop  (cost=754.48..11668710.45 rows=29289 width=4) (actual time=13.278..8750.928 rows=59423 loops=1)
Q20,2.0,->  Hash  (cost=11668710.45..11668710.45 rows=29289 width=4) (actual time=8786.191..8786.191 rows=59423 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.194..4.194 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3032219.59..3032219.60 rows=1 width=27) (actual time=33956.773..33956.773 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3032219.57..3032219.58 rows=1 width=27) (actual time=33956.724..33956.724 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403648.50..405133.74 rows=594098 width=40) (actual time=10222.144..10373.271 rows=1187441 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.617..3666.669 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54774.51..346673.49 rows=594098 width=40) (actual time=1305.311..6622.697 rows=1187441 loops=1)
Q10,1.9,->  Hash Join  (cost=346555.63..2256309.24 rows=573468 width=176) (actual time=7101.797..28690.134 rows=1146395 loops=1)
Q10,1.9,->  Hash Join  (cost=346554.07..2248422.49 rows=573468 width=154) (actual time=7101.768..28287.844 rows=1146395 loops=1)
Q10,1.9,->  Hash Join  (cost=277526.07..2170792.47 rows=573468 width=12) (actual time=5458.768..25820.441 rows=1146395 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818865.80 rows=20035275 width=8) (actual time=0.016..18757.459 rows=37966905 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2326288.51 rows=390920 width=38) (actual time=33.359..33111.286 rows=730363 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1904417.51 rows=801411 width=34) (actual time=33.311..25242.259 rows=1512542 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.570 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671519.55..11671522.48 rows=1172 width=51) (actual time=8816.935..8817.035 rows=1808 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669119.56..11671459.81 rows=1172 width=51) (actual time=8786.642..8815.441 rows=1808 loops=1)
Q1,1.5,Sort  (cost=4243144.01..4243144.02 rows=6 width=20) (actual time=91681.348..91681.348 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4243143.82..4243143.93 rows=6 width=20) (actual time=91681.300..91681.300 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2270645.94..2276380.62 rows=573468 width=176) (actual time=30644.225..30852.573 rows=381241 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2866.25 rows=139125 width=0) (actual time=698.992..698.992 rows=190387 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2901.03..41831.07 rows=139125 width=24) (actual time=707.527..1150.100 rows=190387 loops=1)
Q9,1.2,GroupAggregate  (cost=1228630.37..1228635.27 rows=140 width=46) (actual time=92087.174..94826.044 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92350.90 rows=9220290 width=0) (actual time=127.393..127.393 rows=10708480 loops=1)
Q18,1.1,Limit  (cost=10244252.77..10244255.52 rows=100 width=39) (actual time=67837.809..67838.095 rows=85 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91995.85 rows=12246380 width=0) (actual time=120.521..120.521 rows=10696960 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91995.85 rows=12246380 width=0) (actual time=118.967..118.967 rows=10686720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116113 width=4) (actual time=0.012..899.041 rows=108866 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.41..352564.47 rows=463306 width=16) (actual time=939.917..4944.894 rows=435464 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116113 width=4) (actual time=939.415..939.415 rows=108866 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.773..1894.823 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.03..1697523.41 rows=123650 width=20) (actual time=7.846..9452.837 rows=120421 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.60..1497870.66 rows=407743 width=16) (actual time=7.125..5160.242 rows=397124 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.48..1744543.99 rows=24730 width=16) (actual time=1993.964..11671.443 rows=24087 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.04..1745009.24 rows=24730 width=38) (actual time=1994.010..11713.866 rows=24087 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.18..1736564.55 rows=24730 width=16) (actual time=1993.945..11526.689 rows=24087 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1983.995..1983.995 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.58 rows=13487 width=0) (actual time=4.759..4.759 rows=13249 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13249)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.95..28307.28 rows=13487 width=4) (actual time=7.054..202.578 rows=13249 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.047..0.359 rows=30 loops=13249)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.717..369.871 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.007..3709.256 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2134741.46 rows=1474318 width=42) (actual time=871.423..24247.056 rows=1457436 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2146671.23 rows=61355 width=64) (actual time=913.087..25000.634 rows=58739 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=871.313..10662.520 rows=1196972 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..825.011 rows=120049 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..39.287 rows=8069 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=870.812..870.812 rows=120049 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=41.399..41.399 rows=8069 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92451.70..1370645.22 rows=403195 width=8) (actual time=128.159..24380.217 rows=398186 loops=1)
Q5,1.0,->  Nested Loop  (cost=83133.69..1886280.62 rows=1824761 width=46) (actual time=2433.790..17874.661 rows=1824438 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.688..2294.071 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=87812.69..1905375.19 rows=72987 width=34) (actual time=2493.024..18610.878 rows=72679 loops=1)
Q5,1.0,->  Hash Join  (cost=83133.12..438135.96 rows=456299 width=38) (actual time=2433.770..7957.640 rows=456081 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2404.403..2404.403 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44791.49..386675.73 rows=2281496 width=8) (actual time=27.358..4649.692 rows=2281857 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.630..448.387 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6056.08..269647.11 rows=586935 width=20) (actual time=33.180..5365.239 rows=574301 loops=1)
Q3,1.0,->  Hash Join  (cost=107615.55..499876.28 rows=1493784 width=12) (actual time=424.114..7478.975 rows=1473964 loops=1)
Q3,1.0,->  Hash  (cost=499876.28..499876.28 rows=1493784 width=12) (actual time=7951.379..7951.379 rows=1473964 loops=1)
Q3,1.0,->  Hash  (cost=45986.49..45986.49 rows=300250 width=4) (actual time=394.400..394.400 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6880.30 rows=300250 width=0) (actual time=66.454..66.454 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57875.93..407213.69 rows=7462701 width=16) (actual time=27.726..4616.687 rows=7370635 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251474.67..1733957.25 rows=32429247 width=12) (actual time=121.020..19313.009 rows=32007564 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6955.36..45986.49 rows=300250 width=4) (actual time=75.275..313.700 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.013..3484.827 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=7991.942..7991.942 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600166.25..643659.84 rows=58303 width=20) (actual time=8765.720..9335.951 rows=63379 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6511.35 rows=379243 width=0) (actual time=88.520..88.520 rows=381104 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6606.16..51839.29 rows=379243 width=4) (actual time=97.308..572.542 rows=381104 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..32.080 rows=3981 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.184..33.184 rows=3981 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.283..31.416 rows=3981 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6380.708..6500.213 rows=1603339 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..146.922 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7924 width=30) (actual time=0.052..1169.305 rows=8162 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=158.331..5281.769 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.187..158.187 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..28.524 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.290..27.812 rows=4007 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.039..9.039 rows=21869 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.273..27.167 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.635..291.807 rows=21869 loops=1)
Q19,1.0,->  Nested Loop  (cost=12833.95..610961.72 rows=1127 width=8) (actual time=32.615..1620.713 rows=1112 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.188..4.188 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.19 rows=8049 width=0) (actual time=3.514..3.514 rows=7852 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7989 width=0) (actual time=3.374..3.374 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.03 rows=7931 width=0) (actual time=3.595..3.595 rows=7909 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=4698)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12829.21..26537.99 rows=4763 width=30) (actual time=32.289..266.580 rows=4698 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.006..3821.769 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681888.55 rows=60584455 width=8) (actual time=0.004..7274.166 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681888.55 rows=60584455 width=8) (actual time=0.013..7291.412 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=1975)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=1975)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.56 rows=2013 width=0) (actual time=0.941..0.941 rows=1975 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.06..6665.12 rows=2013 width=4) (actual time=1.261..14.490 rows=1975 loops=1)
Q16,1.0,Sort  (cost=413415.50..413485.29 rows=27918 width=40) (actual time=11034.012..11037.360 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51035.98..51035.98 rows=297784 width=40) (actual time=1302.683..1302.683 rows=297017 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403648.50..411353.90 rows=27918 width=40) (actual time=10222.206..10974.586 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.80..51035.98 rows=297784 width=40) (actual time=35.049..1179.741 rows=297017 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=92557.42..1344858.12 rows=2246290 width=12) (actual time=121.325..18416.434 rows=2243939 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=92557.42..1344858.12 rows=2246290 width=12) (actual time=119.792..23395.951 rows=2243939 loops=1)
Q14,1.0,->  Hash Join  (cost=93425.66..1139069.22 rows=756649 width=29) (actual time=1541.641..26514.121 rows=749795 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7903.66..1042197.48 rows=756649 width=12) (actual time=119.880..24146.996 rows=749795 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15043689 width=8) (actual time=0.018..7610.522 rows=14838047 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740299.12 rows=15043689 width=8) (actual time=851.186..18031.426 rows=15338066 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.011..4745.035 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2424731.97 rows=294524 width=15) (actual time=0.046..24113.769 rows=312251 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..3027065.40 rows=294524 width=27) (actual time=9199.261..33626.945 rows=312251 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=9153.807..9153.807 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.329..40.224 rows=3961 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.305..25.475 rows=3961 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.442..3860.271 rows=316880 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=41.368..4132.833 rows=316880 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.309..41.309 rows=3961 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.372..26.372 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.275..24.833 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.310..39.542 rows=3961 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=60199149 width=20) (actual time=0.013..20013.052 rows=59542835 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831524.94 rows=14935142 width=12) (actual time=0.018..17267.414 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270261.81..270261.81 rows=581141 width=8) (actual time=5454.266..5454.266 rows=573702 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5996.69..270261.81 rows=581141 width=8) (actual time=27.765..5260.425 rows=573702 loops=1)
