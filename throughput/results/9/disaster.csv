Q21,704179.0,->  Nested Loop Semi Join  (cost=2406.31..2854282.98 rows=1 width=34) (actual time=42.237..37416.789 rows=704179 loops=1)
Q18,358843.1,->  GroupAggregate  (cost=10193881.40..11022809.17 rows=30142828 width=39) (actual time=69020.197..69020.485 rows=84 loops=1)
Q3,315960.8,->  Sort  (cost=2539453.53..2547352.55 rows=3159608 width=20) (actual time=33848.812..33848.813 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2186683.77..2802312.37 rows=7537460 width=39) (actual time=43845.725..50073.885 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2117655.77..2620222.47 rows=7537460 width=20) (actual time=42942.865..49170.769 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2802312.37..2802312.37 rows=7537460 width=39) (actual time=50074.064..50074.064 rows=84 loops=1)
Q18,51263.3,->  Sort  (cost=10193881.40..10269238.47 rows=30142828 width=39) (actual time=69020.183..69020.201 rows=588 loops=1)
Q18,51263.3,->  Hash Join  (cost=2896530.62..5625123.16 rows=30142828 width=39) (actual time=50312.517..69019.381 rows=588 loops=1)
Q18,48514.9,->  Hash  (cost=2066715.08..2066715.08 rows=4075255 width=4) (actual time=42808.071..42808.071 rows=84 loops=1)
Q18,48514.9,->  HashAggregate  (cost=1975021.84..2025962.53 rows=4075255 width=8) (actual time=37687.282..42807.842 rows=84 loops=1)
Q21,39765.0,->  Nested Loop Anti Join  (cost=2406.88..2854284.76 rows=1 width=26) (actual time=43.126..40276.010 rows=39765 loops=1)
Q10,27873.5,->  Sort  (cost=2285194.99..2286588.67 rows=557471 width=176) (actual time=31201.490..31201.493 rows=20 loops=1)
Q9,27372.4,->  Sort  (cost=1092782.12..1092782.42 rows=119 width=46) (actual time=90637.145..91187.480 rows=3257327 loops=1)
Q9,27372.4,->  Nested Loop  (cost=66749.48..1092774.23 rows=119 width=24) (actual time=689.875..81657.831 rows=3257327 loops=1)
Q9,27372.4,->  Nested Loop  (cost=66749.04..1092716.55 rows=119 width=24) (actual time=689.853..51054.717 rows=3257327 loops=1)
Q9,27372.4,->  Nested Loop  (cost=66748.75..1092678.16 rows=119 width=28) (actual time=689.842..40800.662 rows=3257327 loops=1)
Q9,27372.4,->  Hash Join  (cost=66751.04..1092778.02 rows=119 width=46) (actual time=689.928..84839.982 rows=3257327 loops=1)
Q2,4711.0,->  Merge Join  (cost=465687.75..886381.16 rows=1 width=190) (actual time=6412.228..8322.819 rows=4711 loops=1)
Q21,3989.0,->  HashAggregate  (cost=2854284.76..2854284.77 rows=1 width=26) (actual time=40327.692..40328.735 rows=3989 loops=1)
Q15,3673.0,->  Subquery Scan on revenue9  (cost=1735056.86..1735139.50 rows=3673 width=12) (actual time=48265.048..48265.296 rows=1 loops=1)
Q15,3673.0,->  Sort  (cost=1735356.99..1735366.17 rows=3673 width=12) (actual time=48265.315..48265.316 rows=1 loops=1)
Q15,3673.0,Merge Join  (cost=3453822.90..3458919.20 rows=3673 width=79) (actual time=48280.095..48280.098 rows=1 loops=1)
Q15,3673.0,->  HashAggregate  (cost=1735056.86..1735102.77 rows=3673 width=12) (actual time=48265.047..48265.294 rows=1 loops=1)
Q7,767.5,Sort  (cost=2147815.42..2147823.09 rows=3070 width=64) (actual time=24435.922..24435.922 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2147591.55..2147637.60 rows=3070 width=64) (actual time=24435.854..24435.860 rows=4 loops=1)
Q8,365.0,Sort  (cost=1718109.98..1718111.80 rows=730 width=38) (actual time=13981.186..13981.187 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1718062.48..1718075.26 rows=730 width=38) (actual time=13981.149..13981.151 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2854284.78..2854284.79 rows=1 width=26) (actual time=40329.866..40329.874 rows=100 loops=1)
Q21,100.0,Limit  (cost=2854284.78..2854284.79 rows=1 width=26) (actual time=40329.868..40329.886 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886381.17..886381.17 rows=1 width=190) (actual time=8327.594..8327.607 rows=100 loops=1)
Q2,100.0,Limit  (cost=886381.17..886381.17 rows=1 width=190) (actual time=8327.596..8327.617 rows=100 loops=1)
Q11,33.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9160.107..9161.252 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9077.819..9154.730 rows=9650 loops=1)
Q3,27.8,->  HashAggregate  (cost=2439579.45..2471175.53 rows=3159608 width=20) (actual time=33770.994..33827.104 rows=113366 loops=1)
Q15,27.2,->  HashAggregate  (cost=1718382.96..1718419.69 rows=3673 width=12) (actual time=22897.105..22934.242 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=731087)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7873.81 rows=772581 width=0) (actual time=120.863..120.863 rows=10771200 loops=1)
Q3,10.5,->  Hash Join  (cost=764542.66..2392185.33 rows=3159608 width=20) (actual time=10785.789..33522.740 rows=298785 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2422.51 rows=321400 width=0) (actual time=34.876..34.876 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.080 rows=7 loops=434504)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.622..3.622 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.599..3.599 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1204457)
Q5,5.0,Sort  (cost=1874509.05..1874509.11 rows=25 width=34) (actual time=14989.410..14989.410 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1874508.22..1874508.47 rows=25 width=34) (actual time=14989.367..14989.367 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487858.24..1487858.25 rows=1 width=16) (actual time=13942.002..13942.002 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574186)
Q4,5.0,->  HashAggregate  (cost=1487858.22..1487858.23 rows=1 width=16) (actual time=13941.955..13941.956 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704179)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5689.23 rows=564923 width=0) (actual time=27.561..27.561 rows=2551040 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5775.93 rows=573593 width=0) (actual time=27.647..27.647 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=845491.56..845492.06 rows=200 width=8) (actual time=26174.746..26174.749 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845481.92..845483.92 rows=200 width=8) (actual time=26174.674..26174.684 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.013 rows=4 loops=453291)
Q17,3.7,->  Nested Loop  (cost=82.92..115255.38 rows=20276 width=4) (actual time=1.705..168.264 rows=5476 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5919.90..1487085.99 rows=154446 width=16) (actual time=27.849..13638.011 rows=526191 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.013..0.029 rows=3 loops=2049)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243582.58 rows=32457944 width=0) (actual time=126.428..126.428 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.287..0.357 rows=3 loops=21868)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55079.74 rows=7338632 width=0) (actual time=28.289..28.289 rows=2540800 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.031..11.199 rows=35992 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..207325.44 rows=27623658 width=0) (actual time=120.381..120.381 rows=10739200 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..207325.44 rows=27623658 width=0) (actual time=119.256..119.256 rows=10739200 loops=1)
Q22,2.3,Sort  (cost=695792.53..695792.54 rows=3 width=20) (actual time=9496.441..9496.441 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642945.62..642945.66 rows=3 width=20) (actual time=9496.385..9496.386 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.050 rows=2 loops=6370)
Q20,2.0,->  Nested Loop  (cost=754.48..11668710.45 rows=29289 width=4) (actual time=13.478..8094.415 rows=59345 loops=1)
Q20,2.0,->  Hash  (cost=11668710.45..11668710.45 rows=29289 width=4) (actual time=8129.854..8129.854 rows=59345 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.565..4.565 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3053089.74..3053089.75 rows=1 width=27) (actual time=33603.441..33603.441 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053089.72..3053089.73 rows=1 width=27) (actual time=33603.390..33603.391 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345436.41..2250849.40 rows=557471 width=176) (actual time=7455.978..28942.155 rows=1136329 loops=1)
Q10,2.0,->  Hash Join  (cost=345434.84..2243182.61 rows=557471 width=154) (actual time=7455.925..28540.640 rows=1136329 loops=1)
Q10,2.0,->  Hash Join  (cost=276406.84..2165792.55 rows=557471 width=12) (actual time=5821.188..26169.498 rows=1136329 loops=1)
Q16,1.9,->  Sort  (cost=403850.05..405339.13 rows=595634 width=40) (actual time=9899.144..10040.233 rows=1188387 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.498..3693.631 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54802.30..346716.64 rows=595634 width=40) (actual time=1265.988..6480.880 rows=1188387 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1822479.54 rows=20075081 width=8) (actual time=0.016..18886.795 rows=37966584 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2330919.04 rows=391697 width=38) (actual time=42.189..32899.789 rows=731087 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1908196.44 rows=803003 width=34) (actual time=42.149..25404.127 rows=1514469 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.452 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671519.55..11671522.48 rows=1172 width=51) (actual time=8160.776..8160.873 rows=1761 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669119.56..11671459.81 rows=1172 width=51) (actual time=8130.279..8159.556 rows=1761 loops=1)
Q1,1.5,Sort  (cost=4205042.48..4205042.50 rows=6 width=20) (actual time=89877.684..89877.684 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4205042.30..4205042.40 rows=6 width=20) (actual time=89877.634..89877.635 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1092782.12..1092786.29 rows=119 width=46) (actual time=90646.747..93340.079 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27380.25 rows=3645367 width=0) (actual time=27.578..27.578 rows=2561280 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.371..4.371 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2264786.18..2270360.89 rows=557471 width=176) (actual time=30862.040..31064.069 rows=378760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.24 rows=139522 width=0) (actual time=743.391..743.391 rows=190665 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.12..41845.58 rows=139522 width=24) (actual time=752.020..1179.352 rows=190665 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=98095 width=4) (actual time=0.011..657.887 rows=108626 loops=1)
Q9,1.1,->  Hash Join  (cost=66748.19..351620.30 rows=391411 width=16) (actual time=689.762..4816.836 rows=434504 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=98095 width=4) (actual time=689.266..689.266 rows=108626 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91495.54 rows=9134754 width=0) (actual time=122.978..122.978 rows=10686720 loops=1)
Q18,1.1,Limit  (cost=10193881.40..10193884.15 rows=100 width=39) (actual time=69020.200..69020.494 rows=84 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.754..2361.699 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.43..1670295.84 rows=120908 width=20) (actual time=6.975..11204.322 rows=120851 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.00..1475077.27 rows=398703 width=16) (actual time=6.898..6282.797 rows=398660 loops=1)
Q8,1.0,->  Nested Loop  (cost=38746.87..1717123.87 rows=24182 width=16) (actual time=2467.756..13897.259 rows=24220 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.44..1717578.84 rows=24182 width=38) (actual time=2467.798..13939.066 rows=24220 loops=1)
Q8,1.0,->  Hash Join  (cost=38746.58..1709321.22 rows=24182 width=16) (actual time=2467.746..13752.160 rows=24220 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2455.281..2455.281 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.03 rows=13280 width=0) (actual time=4.537..4.537 rows=13292 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.030..0.030 rows=30 loops=13292)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.35..28055.26 rows=13280 width=4) (actual time=6.801..140.351 rows=13292 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.039..0.446 rows=30 loops=13292)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.651..462.508 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.005..3106.824 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2134741.46 rows=1474318 width=42) (actual time=601.672..23695.300 rows=1465638 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2146671.23 rows=61355 width=64) (actual time=642.967..24338.684 rows=58107 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=601.614..8769.397 rows=1204457 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..562.053 rows=120071 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..38.940 rows=7992 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=601.029..601.029 rows=120071 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=41.183..41.183 rows=7992 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91695.76..1365832.72 rows=800883 width=8) (actual time=123.776..21970.531 rows=794114 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.702..1879.652 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=66299.16..1854515.54 rows=1845029 width=46) (actual time=2016.104..14183.097 rows=1814024 loops=1)
Q5,1.0,->  Hash Join  (cost=70978.16..1873770.24 rows=73798 width=34) (actual time=2075.737..14906.192 rows=71899 loops=1)
Q5,1.0,->  Hash Join  (cost=66298.60..390297.51 rows=461371 width=38) (actual time=2016.077..7444.710 rows=453291 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=1986.328..1986.328 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27956.97..338691.47 rows=2306853 width=8) (actual time=27.745..4564.659 rows=2275908 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.632..366.029 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5919.33..270071.23 rows=573593 width=20) (actual time=27.825..5555.863 rows=574186 loops=1)
Q3,1.0,->  Hash Join  (cost=106612.54..494538.77 rows=1464546 width=12) (actual time=772.855..10133.523 rows=1462337 loops=1)
Q3,1.0,->  Hash  (cost=494538.77..494538.77 rows=1464546 width=12) (actual time=10652.025..10652.025 rows=1462337 loops=1)
Q3,1.0,->  Hash  (cost=45956.26..45956.26 rows=299350 width=4) (actual time=742.438..742.438 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.55 rows=299350 width=0) (actual time=68.378..68.378 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56914.40..402675.30 rows=7338632 width=16) (actual time=28.448..6878.115 rows=7309548 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251697.07..1726026.37 rows=32457944 width=12) (actual time=127.179..17429.199 rows=32315494 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.39..45956.26 rows=299350 width=4) (actual time=77.203..646.560 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.011..4174.969 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8125.298..8125.298 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598990.06..642507.10 rows=58469 width=20) (actual time=8922.609..9469.630 rows=63520 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6539.43 rows=380324 width=0) (actual time=89.421..89.421 rows=381521 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6634.51..51896.02 rows=380324 width=4) (actual time=98.059..614.487 rows=381521 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.299..40.801 rows=3990 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=42.027..42.027 rows=3990 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.286..40.100 rows=3990 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6411.889..6537.486 rows=1602944 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..156.084 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7957 width=30) (actual time=0.097..1135.460 rows=7932 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=167.958..5238.171 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=167.813..167.813 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..30.298 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.269..28.039 rows=3934 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.057..9.057 rows=21868 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.255..27.468 rows=3934 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.655..244.954 rows=21868 loops=1)
Q19,1.0,->  Nested Loop  (cost=12836.52..614966.66 rows=1138 width=8) (actual time=41.713..2190.696 rows=1157 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.653..4.653 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.07 rows=8136 width=0) (actual time=4.317..4.317 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8054 width=0) (actual time=3.953..3.953 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8028 width=0) (actual time=3.926..3.926 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.028..0.028 rows=30 loops=4885)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12831.78..26614.39 rows=4795 width=30) (actual time=36.039..310.315 rows=4885 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.007..2748.188 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673593.56 rows=60285656 width=8) (actual time=0.011..8800.833 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673593.56 rows=60285656 width=8) (actual time=0.013..8180.379 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2049)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2049)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.65 rows=2022 width=0) (actual time=0.969..0.969 rows=2049 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.15..6689.41 rows=2022 width=4) (actual time=1.298..13.252 rows=2049 loops=1)
Q16,1.0,Sort  (cost=413642.80..413712.78 rows=27990 width=40) (actual time=10688.941..10691.557 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=51054.15..51054.15 rows=298554 width=40) (actual time=1263.456..1263.456 rows=297259 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403850.05..411575.37 rows=27990 width=40) (actual time=9899.199..10630.045 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2497.15..51054.15 rows=298554 width=40) (actual time=34.941..1139.721 rows=297259 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=207881.23..1696151.10 rows=2223186 width=12) (actual time=119.996..20830.172 rows=2245114 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=207881.23..1696151.10 rows=2223186 width=12) (actual time=121.168..23157.617 rows=2245114 loops=1)
Q14,1.0,->  Hash Join  (cost=93588.96..1151832.51 rows=772581 width=29) (actual time=1622.248..25519.386 rows=774407 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8066.96..1054721.79 rows=772581 width=12) (actual time=121.781..23274.094 rows=774407 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14865216 width=8) (actual time=0.019..7486.319 rows=14854081 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733655.84 rows=14865216 width=8) (actual time=769.246..16975.846 rows=15354101 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.012..4222.438 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441626.55 rows=291240 width=15) (actual time=0.059..23798.233 rows=312932 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3047993.02 rows=291240 width=27) (actual time=9172.003..33281.835 rows=312932 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=9108.307..9108.307 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.316..41.282 rows=3987 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.309..25.702 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.673..4530.897 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=42.445..4187.033 rows=318960 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=42.382..42.382 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.598..26.598 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.277..25.066 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.294..40.575 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831524.94 rows=59337934 width=20) (actual time=0.018..18982.166 rows=58896878 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827914.61 rows=14905702 width=12) (actual time=0.031..17175.499 rows=14822937 loops=1)
Q10,1.0,->  Hash  (cost=269345.31..269345.31 rows=564923 width=8) (actual time=5817.694..5817.694 rows=568172 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5830.46..269345.31 rows=564923 width=8) (actual time=27.732..5622.087 rows=568172 loops=1)
