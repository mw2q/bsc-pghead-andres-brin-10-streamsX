Q21,700021.0,->  Nested Loop Semi Join  (cost=2406.31..2851441.96 rows=1 width=34) (actual time=36.917..36729.921 rows=700021 loops=1)
Q18,400303.8,->  GroupAggregate  (cost=10153434.36..10979061.08 rows=30022790 width=39) (actual time=65083.222..65083.463 rows=75 loops=1)
Q3,317990.6,->  Sort  (cost=2557453.68..2565403.45 rows=3179906 width=20) (actual time=32026.125..32026.127 rows=10 loops=1)
Q18,100099.8,->  Hash Join  (cost=2178818.62..2792161.58 rows=7507492 width=39) (actual time=40693.398..45711.676 rows=75 loops=1)
Q18,100099.8,->  Hash Join  (cost=2109790.62..2610521.21 rows=7507492 width=20) (actual time=39591.732..44609.802 rows=75 loops=1)
Q18,100099.8,->  Hash  (cost=2792161.58..2792161.58 rows=7507492 width=39) (actual time=45711.851..45711.851 rows=75 loops=1)
Q18,57186.2,->  Sort  (cost=10153434.36..10228491.33 rows=30022790 width=39) (actual time=65083.210..65083.249 rows=525 loops=1)
Q18,57186.2,->  Hash Join  (cost=2886005.23..5603731.68 rows=30022790 width=39) (actual time=46069.997..65082.434 rows=525 loops=1)
Q18,54336.7,->  Hash  (cost=2058849.94..2058849.94 rows=4075255 width=4) (actual time=39475.945..39475.945 rows=75 loops=1)
Q18,54336.7,->  HashAggregate  (cost=1967156.70..2018097.39 rows=4075255 width=8) (actual time=35180.843..39475.740 rows=75 loops=1)
Q21,39265.0,->  Nested Loop Anti Join  (cost=2406.88..2851443.74 rows=1 width=26) (actual time=40.312..39513.105 rows=39265 loops=1)
Q10,28634.6,->  Sort  (cost=2295803.28..2297235.01 rows=572693 width=176) (actual time=30744.689..30744.692 rows=20 loops=1)
Q9,26583.1,->  Sort  (cost=1122376.30..1122376.60 rows=123 width=46) (actual time=95096.564..95749.582 rows=3269728 loops=1)
Q9,26583.1,->  Nested Loop  (cost=66799.53..1122368.16 rows=123 width=24) (actual time=936.892..85545.230 rows=3269728 loops=1)
Q9,26583.1,->  Nested Loop  (cost=66799.10..1122308.55 rows=123 width=24) (actual time=936.870..53016.094 rows=3269728 loops=1)
Q9,26583.1,->  Nested Loop  (cost=66798.80..1122268.86 rows=123 width=28) (actual time=936.855..42333.370 rows=3269728 loops=1)
Q9,26583.1,->  Hash Join  (cost=66801.09..1122372.03 rows=123 width=46) (actual time=936.957..88796.279 rows=3269728 loops=1)
Q2,4856.0,->  Merge Join  (cost=465687.75..886430.01 rows=1 width=190) (actual time=6211.511..8106.881 rows=4856 loops=1)
Q21,3960.0,->  HashAggregate  (cost=2851443.75..2851443.76 rows=1 width=26) (actual time=39566.402..39567.540 rows=3960 loops=1)
Q15,3756.0,->  Subquery Scan on revenue7  (cost=1810263.46..1810347.97 rows=3756 width=12) (actual time=46502.026..46529.967 rows=1 loops=1)
Q15,3756.0,->  Sort  (cost=1810570.98..1810580.37 rows=3756 width=12) (actual time=46529.987..46529.987 rows=1 loops=1)
Q15,3756.0,Merge Join  (cost=3603816.61..3608914.15 rows=3756 width=79) (actual time=46558.865..46558.868 rows=1 loops=1)
Q15,3756.0,->  HashAggregate  (cost=1810263.46..1810310.41 rows=3756 width=12) (actual time=46502.025..46529.965 rows=1 loops=1)
Q7,767.5,Sort  (cost=2147815.42..2147823.09 rows=3070 width=64) (actual time=21096.938..21096.938 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2147591.55..2147637.60 rows=3070 width=64) (actual time=21096.884..21096.886 rows=4 loops=1)
Q8,365.0,Sort  (cost=1722667.58..1722669.40 rows=730 width=38) (actual time=12020.714..12020.714 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1722620.08..1722632.86 rows=730 width=38) (actual time=12020.669..12020.671 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2851443.77..2851443.77 rows=1 width=26) (actual time=39568.707..39568.714 rows=100 loops=1)
Q21,100.0,Limit  (cost=2851443.77..2851443.77 rows=1 width=26) (actual time=39568.709..39568.726 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886430.02..886430.02 rows=1 width=190) (actual time=8111.778..8111.789 rows=100 loops=1)
Q2,100.0,Limit  (cost=886430.02..886430.02 rows=1 width=190) (actual time=8111.780..8111.803 rows=100 loops=1)
Q11,34.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8301.534..8302.616 rows=9241 loops=1)
Q11,34.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8213.781..8296.227 rows=9241 loops=1)
Q3,28.0,->  HashAggregate  (cost=2456938.00..2488737.06 rows=3179906 width=20) (actual time=31961.903..32004.913 rows=113451 loops=1)
Q15,26.6,->  HashAggregate  (cost=1793160.82..1793198.38 rows=3756 width=12) (actual time=20780.728..20813.301 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=726513)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7807.12 rows=765912 width=0) (actual time=119.931..119.931 rows=10771200 loops=1)
Q3,10.6,->  Hash Join  (cost=769479.05..2409239.41 rows=3179906 width=20) (actual time=8338.743..31717.479 rows=298872 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2391.56 rows=317273 width=0) (actual time=34.916..34.916 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.083 rows=8 loops=435832)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.629..3.629 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.715..3.715 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.295..0.295 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.008..0.009 rows=1 loops=1199511)
Q5,5.0,Sort  (cost=1874509.05..1874509.11 rows=25 width=34) (actual time=15488.937..15488.938 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1874508.22..1874508.47 rows=25 width=34) (actual time=15488.886..15488.886 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482644.07..1482644.07 rows=1 width=16) (actual time=13034.711..13034.711 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.11 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=567142)
Q4,5.0,->  HashAggregate  (cost=1482644.05..1482644.06 rows=1 width=16) (actual time=13034.661..13034.662 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=700021)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5754.22 rows=571422 width=0) (actual time=27.375..27.375 rows=2543360 loops=1)
Q13,4.4,Sort  (cost=852295.69..852296.19 rows=200 width=8) (actual time=28092.287..28092.291 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852286.05..852288.05 rows=200 width=8) (actual time=28092.216..28092.226 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5843.47 rows=580347 width=0) (actual time=27.664..27.664 rows=2561280 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=457441)
Q17,3.6,->  Nested Loop  (cost=82.77..114470.65 rows=20176 width=4) (actual time=1.575..200.830 rows=5587 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5897.64..1481870.91 rows=154628 width=16) (actual time=27.576..12742.836 rows=520143 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.017..0.042 rows=3 loops=2063)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245648.29 rows=32733372 width=0) (actual time=119.554..119.554 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.287..0.358 rows=3 loops=21813)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55350.57 rows=7374743 width=0) (actual time=27.478..27.478 rows=2558720 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..230988.74 rows=30778765 width=0) (actual time=120.112..120.112 rows=10771200 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..230988.74 rows=30778765 width=0) (actual time=119.058..119.058 rows=10771200 loops=1)
Q22,2.3,Sort  (cost=693424.40..693424.40 rows=3 width=20) (actual time=9427.184..9427.185 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640579.11..640579.15 rows=3 width=20) (actual time=9427.137..9427.139 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.052 rows=2 loops=6596)
Q20,2.0,->  Nested Loop  (cost=754.49..11668711.64 rows=29289 width=4) (actual time=13.364..8147.837 rows=59100 loops=1)
Q20,2.0,->  Hash  (cost=11668711.64..11668711.64 rows=29289 width=4) (actual time=8183.528..8183.528 rows=59100 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.279..4.279 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402741.97..404210.67 rows=587482 width=40) (actual time=10083.257..10223.172 rows=1188616 loops=1)
Q16,2.0,->  Hash Join  (cost=54616.08..346448.90 rows=587482 width=40) (actual time=1292.056..6617.226 rows=1188616 loops=1)
Q12,2.0,Sort  (cost=3053084.87..3053084.87 rows=1 width=27) (actual time=33227.887..33227.887 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053084.85..3053084.86 rows=1 width=27) (actual time=33227.833..33227.833 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.565..3811.681 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347031.66..2260519.87 rows=572693 width=176) (actual time=7061.956..28468.020 rows=1135162 loops=1)
Q10,1.9,->  Hash Join  (cost=347030.10..2252643.77 rows=572693 width=154) (actual time=7061.927..28069.292 rows=1135162 loops=1)
Q10,1.9,->  Hash Join  (cost=278002.10..2175025.38 rows=572693 width=12) (actual time=5515.573..25768.077 rows=1135162 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820675.23 rows=20055206 width=8) (actual time=0.014..17780.318 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2328606.83 rows=391309 width=38) (actual time=36.887..32237.051 rows=726513 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1906309.64 rows=802208 width=34) (actual time=36.730..24195.164 rows=1503198 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.488 rows=56 loops=1)
Q1,1.5,Sort  (cost=4202060.04..4202060.06 rows=6 width=20) (actual time=90182.021..90182.022 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4202059.86..4202059.96 rows=6 width=20) (actual time=90181.973..90181.975 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2274837.19..2280564.12 rows=572693 width=176) (actual time=30418.695..30607.589 rows=378572 loops=1)
Q9,1.4,GroupAggregate  (cost=1122376.30..1122380.60 rows=123 width=46) (actual time=95106.734..98009.140 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27380.25 rows=3645367 width=0) (actual time=32.114..32.114 rows=2561280 loops=1)
Q20,1.4,Sort  (cost=11671520.74..11671523.67 rows=1172 width=51) (actual time=8222.171..8222.275 rows=1755 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669120.75..11671461.00 rows=1172 width=51) (actual time=8184.045..8220.623 rows=1755 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.030..21.851 rows=70652 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.03 rows=139505 width=0) (actual time=696.069..696.069 rows=190266 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.91..41844.92 rows=139505 width=24) (actual time=704.390..799.199 rows=190266 loops=1)
Q18,1.3,Limit  (cost=10153434.36..10153437.11 rows=100 width=39) (actual time=65083.225..65083.474 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92223.17 rows=9207517 width=0) (actual time=120.864..120.864 rows=10771200 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102099 width=4) (actual time=0.017..894.281 rows=108958 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.24..351830.12 rows=407388 width=16) (actual time=936.746..5008.301 rows=435832 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102099 width=4) (actual time=936.147..936.147 rows=108958 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.827..2149.706 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.69..1674811.30 rows=121451 width=20) (actual time=7.522..9448.532 rows=120109 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.25..1478714.59 rows=400492 width=16) (actual time=7.369..4059.920 rows=395048 loops=1)
Q8,1.0,->  Nested Loop  (cost=38747.13..1721677.28 rows=24290 width=16) (actual time=2266.888..11937.858 rows=24081 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.69..1722134.28 rows=24290 width=38) (actual time=2266.937..11978.763 rows=24081 loops=1)
Q8,1.0,->  Hash Join  (cost=38746.84..1713839.79 rows=24290 width=16) (actual time=2266.830..11786.859 rows=24081 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2257.254..2257.254 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.27 rows=13313 width=0) (actual time=4.909..4.909 rows=13184 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13184)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.60..28094.59 rows=13313 width=4) (actual time=7.304..157.298 rows=13184 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.032..0.282 rows=30 loops=13184)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.666..420.016 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.007..3148.692 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2134741.46 rows=1474318 width=42) (actual time=875.802..20407.242 rows=1455861 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2146671.23 rows=61355 width=64) (actual time=920.977..21011.112 rows=57978 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=875.762..8924.393 rows=1199511 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.034..830.102 rows=120070 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..42.219 rows=7964 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=875.244..875.244 rows=120070 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=44.426..44.426 rows=7964 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92424.65..1376710.79 rows=805950 width=8) (actual time=121.670..23443.036 rows=795804 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.330..2137.537 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=66299.16..1854515.54 rows=1845029 width=46) (actual time=2288.887..14643.852 rows=1826654 loops=1)
Q5,1.0,->  Hash Join  (cost=70978.16..1873770.24 rows=73798 width=34) (actual time=2379.341..15404.073 rows=73126 loops=1)
Q5,1.0,->  Hash Join  (cost=66298.60..390297.51 rows=461371 width=38) (actual time=2288.845..7613.562 rows=457441 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2254.258..2254.258 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27956.97..338691.47 rows=2306853 width=8) (actual time=32.332..4482.937 rows=2278106 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.748..416.401 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5897.08..268749.41 rows=571422 width=20) (actual time=27.548..4478.406 rows=567142 loops=1)
Q3,1.0,->  Hash Join  (cost=106892.40..497250.50 rows=1471753 width=12) (actual time=544.342..7697.732 rows=1459889 loops=1)
Q3,1.0,->  Hash  (cost=497250.50..497250.50 rows=1471753 width=12) (actual time=8211.810..8211.810 rows=1459889 loops=1)
Q3,1.0,->  Hash  (cost=45956.26..45956.26 rows=299350 width=4) (actual time=514.719..514.719 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.55 rows=299350 width=0) (actual time=66.142..66.142 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57194.26..405179.55 rows=7374743 width=16) (actual time=27.639..4402.922 rows=7297169 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253831.63..1739042.78 rows=32733372 width=12) (actual time=120.331..17811.651 rows=32363909 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.39..45956.26 rows=299350 width=4) (actual time=74.956..431.103 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.012..4049.139 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=8440.384..8440.384 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596624.61..640140.64 rows=58462 width=20) (actual time=9205.205..9405.677 rows=63639 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6539.12 rows=380279 width=0) (actual time=85.526..85.526 rows=380883 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6634.19..51894.51 rows=380279 width=4) (actual time=93.817..569.557 rows=380883 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.315..35.523 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.671..36.671 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.304..34.871 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6210.847..6329.929 rows=1602892 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.304..147.267 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7958 width=30) (actual time=0.359..1107.856 rows=8081 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=158.852..5107.173 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.707..158.707 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.264..28.607 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.315..35.311 rows=4010 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.084..9.084 rows=21813 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.297..34.549 rows=4010 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22021 width=4) (actual time=12.737..300.113 rows=21813 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.167..4.167 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7992 width=0) (actual time=4.157..4.157 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.35 rows=7966 width=0) (actual time=3.912..3.912 rows=7886 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.35 rows=7966 width=0) (actual time=3.715..3.715 rows=7912 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12828.71..26501.83 rows=4748 width=30) (actual time=33.598..353.866 rows=4782 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..2214.573 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666928.80 rows=60045580 width=8) (actual time=0.004..7369.735 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666928.80 rows=60045580 width=8) (actual time=0.003..8910.373 rows=59985329 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2063)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2063)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.51 rows=2008 width=0) (actual time=0.964..0.964 rows=2063 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.01..6649.95 rows=2008 width=4) (actual time=1.298..14.387 rows=2063 loops=1)
Q16,1.0,Sort  (cost=412397.96..412466.97 rows=27607 width=40) (actual time=10876.286..10878.810 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50919.00..50919.00 rows=294468 width=40) (actual time=1289.478..1289.478 rows=297319 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402741.97..410361.56 rows=27607 width=40) (actual time=10083.316..10817.091 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2465.17..50919.00 rows=294468 width=40) (actual time=34.989..1166.855 rows=297319 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=231558.82..1770357.30 rows=2280352 width=12) (actual time=119.832..18739.940 rows=2243753 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=231558.82..1770357.30 rows=2280352 width=12) (actual time=120.890..23610.942 rows=2243753 loops=1)
Q14,1.0,->  Hash Join  (cost=93520.60..1148900.63 rows=765912 width=29) (actual time=1669.116..23148.936 rows=748385 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7998.60..1051889.95 rows=765912 width=12) (actual time=120.753..20856.095 rows=748385 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445175.49 rows=15029128 width=8) (actual time=0.019..8421.755 rows=14839828 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739640.41 rows=15029128 width=8) (actual time=789.376..17959.599 rows=15339846 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.011..3953.102 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441626.55 rows=291140 width=15) (actual time=0.075..24199.021 rows=311437 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3047989.90 rows=291140 width=27) (actual time=8385.170..32898.525 rows=311437 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=8337.315..8337.315 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.354..40.319 rows=4010 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.329..26.223 rows=4010 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.280..3742.827 rows=320800 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=41.454..4097.715 rows=320800 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.353..41.353 rows=4010 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.188..27.188 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.296..25.586 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.335..39.627 rows=4010 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824307.70 rows=59443804 width=20) (actual time=0.013..18948.140 rows=59220288 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=14964930 width=12) (actual time=0.012..17272.942 rows=14807792 loops=1)
Q10,1.0,->  Hash  (cost=270747.76..270747.76 rows=580347 width=8) (actual time=5512.106..5512.106 rows=567399 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5988.56..270747.76 rows=580347 width=8) (actual time=27.826..5323.051 rows=567399 loops=1)
