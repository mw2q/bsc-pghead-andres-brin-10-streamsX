Q21,707395.0,->  Nested Loop Semi Join  (cost=2406.31..2874274.59 rows=1 width=34) (actual time=34.411..36428.595 rows=707395 loops=1)
Q18,403896.3,->  GroupAggregate  (cost=10244252.77..11077289.04 rows=30292228 width=39) (actual time=69604.058..69604.309 rows=75 loops=1)
Q3,318266.6,->  Sort  (cost=2554946.70..2562903.36 rows=3182666 width=20) (actual time=32475.351..32475.352 rows=10 loops=1)
Q18,100999.7,->  Hash Join  (cost=2196472.75..2814962.94 rows=7574980 width=39) (actual time=45200.481..50890.156 rows=75 loops=1)
Q18,100999.7,->  Hash Join  (cost=2127444.75..2632310.24 rows=7574980 width=20) (actual time=44313.663..50003.064 rows=75 loops=1)
Q18,100999.7,->  Hash  (cost=2814962.94..2814962.94 rows=7574980 width=39) (actual time=50890.375..50890.375 rows=75 loops=1)
Q18,57699.4,->  Sort  (cost=10244252.77..10319983.34 rows=30292228 width=39) (actual time=69604.047..69604.079 rows=525 loops=1)
Q18,57699.4,->  Hash Join  (cost=2909650.19..5651766.71 rows=30292228 width=39) (actual time=50944.124..69603.272 rows=525 loops=1)
Q18,54336.7,->  Hash  (cost=2076504.06..2076504.06 rows=4075255 width=4) (actual time=44224.946..44224.946 rows=75 loops=1)
Q18,54336.7,->  HashAggregate  (cost=1984810.82..2035751.51 rows=4075255 width=8) (actual time=39103.828..44224.694 rows=75 loops=1)
Q21,39441.0,->  Nested Loop Anti Join  (cost=2406.88..2874276.38 rows=1 width=26) (actual time=35.705..39291.014 rows=39441 loops=1)
Q10,28531.7,->  Sort  (cost=2278545.68..2279972.27 rows=570635 width=176) (actual time=30513.317..30513.321 rows=20 loops=1)
Q9,21249.0,->  Sort  (cost=1319343.62..1319344.01 rows=154 width=46) (actual time=93307.218..93862.891 rows=3272358 loops=1)
Q9,21249.0,->  Nested Loop  (cost=67124.85..1319333.58 rows=154 width=24) (actual time=1034.182..84292.723 rows=3272358 loops=1)
Q9,21249.0,->  Nested Loop  (cost=67124.42..1319258.94 rows=154 width=24) (actual time=1034.124..51637.822 rows=3272358 loops=1)
Q9,21249.0,->  Nested Loop  (cost=67124.13..1319209.25 rows=154 width=28) (actual time=1034.114..41335.075 rows=3272358 loops=1)
Q9,21249.0,->  Hash Join  (cost=67126.42..1319338.03 rows=154 width=46) (actual time=1034.234..87572.359 rows=3272358 loops=1)
Q2,4813.0,->  Merge Join  (cost=465687.75..889752.05 rows=1 width=190) (actual time=6522.518..8468.288 rows=4813 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2874276.38..2874276.39 rows=1 width=26) (actual time=39343.157..39344.462 rows=4009 loops=1)
Q15,3775.0,->  Subquery Scan on revenue2  (cost=1441439.85..1441524.79 rows=3775 width=12) (actual time=47765.064..47777.391 rows=1 loops=1)
Q15,3775.0,->  Sort  (cost=1441749.07..1441758.51 rows=3775 width=12) (actual time=47777.411..47777.412 rows=1 loops=1)
Q15,3775.0,Merge Join  (cost=2866168.54..2871266.36 rows=3775 width=79) (actual time=47781.473..47781.475 rows=1 loops=1)
Q15,3775.0,->  HashAggregate  (cost=1441439.85..1441487.04 rows=3775 width=12) (actual time=47765.063..47777.389 rows=1 loops=1)
Q7,767.5,Sort  (cost=2143600.46..2143608.14 rows=3070 width=64) (actual time=23810.688..23810.688 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2143376.60..2143422.65 rows=3070 width=64) (actual time=23810.622..23810.630 rows=4 loops=1)
Q8,365.0,Sort  (cost=1754509.67..1754511.50 rows=730 width=38) (actual time=10902.703..10902.704 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1754462.18..1754474.96 rows=730 width=38) (actual time=10902.662..10902.663 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=39345.608..39345.615 rows=100 loops=1)
Q21,100.0,Limit  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=39345.609..39345.626 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889752.06..889752.07 rows=1 width=190) (actual time=8473.184..8473.198 rows=100 loops=1)
Q2,100.0,Limit  (cost=889752.06..889752.07 rows=1 width=190) (actual time=8473.185..8473.207 rows=100 loops=1)
Q11,32.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8368.822..8369.971 rows=9940 loops=1)
Q11,32.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8288.021..8363.288 rows=9940 loops=1)
Q3,27.9,->  HashAggregate  (cost=2454343.77..2486170.43 rows=3182666 width=20) (actual time=32408.781..32454.129 rows=113963 loops=1)
Q15,26.4,->  HashAggregate  (cost=1424334.23..1424371.98 rows=3775 width=12) (actual time=22651.037..22681.602 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=734363)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7805.14 rows=765714 width=0) (actual time=120.269..120.269 rows=10676480 loops=1)
Q3,10.5,->  Hash Join  (cost=769880.07..2406603.78 rows=3182666 width=20) (actual time=9416.541..32159.671 rows=301600 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2409.36 rows=319647 width=0) (actual time=34.822..34.822 rows=3246080 loops=1)
Q15,10.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..3.046 rows=9914 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.080 rows=8 loops=436252)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.613..3.613 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1207052)
Q5,5.0,Sort  (cost=1917908.29..1917908.35 rows=25 width=34) (actual time=16405.654..16405.655 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1917907.46..1917907.71 rows=25 width=34) (actual time=16405.607..16405.608 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482604.21..1482604.21 rows=1 width=16) (actual time=13083.709..13083.709 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.19 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=574130)
Q4,5.0,->  HashAggregate  (cost=1482604.19..1482604.20 rows=1 width=16) (actual time=13083.665..13083.667 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=707395)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5711.67 rows=567167 width=0) (actual time=27.737..27.737 rows=2561280 loops=1)
Q13,4.3,Sort  (cost=852150.55..852151.05 rows=200 width=8) (actual time=26132.755..26132.757 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=852140.91..852142.91 rows=200 width=8) (actual time=26132.685..26132.694 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5822.56 rows=578256 width=0) (actual time=27.436..27.436 rows=2540800 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=456378)
Q4,3.4,->  Nested Loop Semi Join  (cost=5854.03..1481842.12 rows=152414 width=16) (actual time=27.925..12787.209 rows=526325 loops=1)
Q17,3.4,->  Nested Loop  (cost=78.32..111990.92 rows=19675 width=4) (actual time=1.797..208.433 rows=5673 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=2077)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243738.79 rows=32478772 width=0) (actual time=119.901..119.901 rows=10771200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.295..0.364 rows=3 loops=22047)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55915.73 rows=7450097 width=0) (actual time=27.522..27.522 rows=2561280 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44485.83 rows=5926111 width=0) (actual time=27.467..27.467 rows=2551040 loops=1)
Q22,2.3,Sort  (cost=695245.32..695245.32 rows=3 width=20) (actual time=10093.710..10093.711 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642373.53..642373.58 rows=3 width=20) (actual time=10093.665..10093.668 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6492)
Q20,2.0,->  Nested Loop  (cost=754.48..11668710.45 rows=29289 width=4) (actual time=13.433..8275.932 rows=59698 loops=1)
Q20,2.0,->  Hash  (cost=11668710.45..11668710.45 rows=29289 width=4) (actual time=8310.997..8310.997 rows=59698 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.262..4.262 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403395.13..404875.89 rows=592304 width=40) (actual time=10060.995..10202.759 rows=1187455 loops=1)
Q16,2.0,->  Hash Join  (cost=54724.04..346605.08 rows=592304 width=40) (actual time=1239.734..6584.148 rows=1187455 loops=1)
Q12,2.0,Sort  (cost=3043963.67..3043963.67 rows=1 width=27) (actual time=33648.958..33648.958 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3043963.65..3043963.66 rows=1 width=27) (actual time=33648.913..33648.913 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344926.72..2243389.06 rows=570635 width=176) (actual time=7692.064..28284.900 rows=1148074 loops=1)
Q10,2.0,->  Hash Join  (cost=344925.16..2235541.27 rows=570635 width=154) (actual time=7692.034..27889.556 rows=1148074 loops=1)
Q10,2.0,->  Hash Join  (cost=275897.16..2157953.74 rows=570635 width=12) (actual time=6379.582..25746.120 rows=1148074 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.463..3821.079 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835177.86 rows=20214956 width=8) (actual time=0.012..18305.301 rows=37927978 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347189.19 rows=394426 width=38) (actual time=34.365..31857.943 rows=734363 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921475.24 rows=808598 width=34) (actual time=34.199..24638.995 rows=1522153 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.429 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671519.55..11671522.48 rows=1172 width=51) (actual time=8340.713..8340.811 rows=1780 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669119.56..11671459.81 rows=1172 width=51) (actual time=8311.434..8339.161 rows=1780 loops=1)
Q1,1.5,Sort  (cost=4209467.37..4209467.38 rows=6 width=20) (actual time=91390.405..91390.406 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4209467.18..4209467.29 rows=6 width=20) (actual time=91390.358..91390.360 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.186..4.186 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257654.94..2263361.29 rows=570635 width=176) (actual time=30174.525..30374.509 rows=381524 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.69 rows=139772 width=0) (actual time=713.282..713.282 rows=190907 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.64..41854.65 rows=139772 width=24) (actual time=721.869..1140.824 rows=190907 loops=1)
Q18,1.3,Limit  (cost=10244252.77..10244255.52 rows=100 width=39) (actual time=69604.062..69604.320 rows=75 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..109819.18 rows=14622824 width=0) (actual time=127.325..127.325 rows=10728960 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..109819.18 rows=14622824 width=0) (actual time=119.224..119.224 rows=10718720 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=128125 width=4) (actual time=0.013..990.782 rows=109063 loops=1)
Q9,1.1,->  Hash Join  (cost=67123.56..353193.91 rows=511235 width=16) (actual time=1034.071..5227.577 rows=436252 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=128125 width=4) (actual time=1033.526..1033.526 rows=109063 loops=1)
Q9,1.1,GroupAggregate  (cost=1319343.62..1319349.01 rows=154 width=46) (actual time=93317.036..96046.386 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91983.72 rows=9183572 width=0) (actual time=120.068..120.068 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.132..9.132 rows=22047 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.732..1878.778 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.60..1706439.22 rows=124196 width=20) (actual time=7.193..8625.260 rows=122594 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.16..1505905.29 rows=409545 width=16) (actual time=7.085..4945.411 rows=403058 loops=1)
Q8,1.0,->  Nested Loop  (cost=38757.04..1753498.11 rows=24839 width=16) (actual time=1982.939..10819.354 rows=24568 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.60..1753965.40 rows=24839 width=38) (actual time=1982.984..10860.952 rows=24568 loops=1)
Q8,1.0,->  Hash Join  (cost=38756.75..1745483.49 rows=24839 width=16) (actual time=1982.920..10675.784 rows=24568 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1972.839..1972.839 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.13 rows=13560 width=0) (actual time=4.708..4.708 rows=13430 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=13430)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.52..28398.80 rows=13560 width=4) (actual time=6.986..113.099 rows=13430 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.039..0.345 rows=30 loops=13430)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.645..366.501 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2998.457 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130544.63 rows=1471384 width=42) (actual time=616.187..23049.164 rows=1464634 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142458.10 rows=61233 width=64) (actual time=664.463..23713.855 rows=57745 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=616.165..8723.551 rows=1207052 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..576.067 rows=120322 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..45.748 rows=7965 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=615.633..615.633 rows=120322 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.048..48.048 rows=7965 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92079.64..1365183.01 rows=383689 width=8) (actual time=121.265..28595.115 rows=382438 loops=1)
Q5,1.0,->  Nested Loop  (cost=83401.82..1897992.39 rows=1835679 width=46) (actual time=2160.367..15454.509 rows=1825040 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.736..2016.269 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=88080.82..1917173.22 rows=73424 width=34) (actual time=2225.022..16320.633 rows=72808 loops=1)
Q5,1.0,->  Hash Join  (cost=83401.26..440531.12 rows=459033 width=38) (actual time=2160.318..8875.129 rows=456378 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2130.321..2130.321 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45059.63..388992.29 rows=2295166 width=8) (actual time=27.627..5661.012 rows=2281755 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.632..393.342 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5853.46..270414.97 rows=567167 width=20) (actual time=27.903..5227.076 rows=574130 loops=1)
Q3,1.0,->  Hash Join  (cost=107467.48..499446.02 rows=1486046 width=12) (actual time=708.387..8787.937 rows=1475424 loops=1)
Q3,1.0,->  Hash  (cost=499446.02..499446.02 rows=1486046 width=12) (actual time=9289.611..9289.611 rows=1475424 loops=1)
Q3,1.0,->  Hash  (cost=45949.23..45949.23 rows=299200 width=4) (actual time=678.782..678.782 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.43 rows=299200 width=0) (actual time=68.193..68.193 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57778.25..406958.47 rows=7450097 width=16) (actual time=27.684..5627.346 rows=7358297 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251858.48..1734960.13 rows=32478772 width=12) (actual time=120.661..17687.885 rows=32057898 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.23..45949.23 rows=299200 width=4) (actual time=77.114..587.367 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.015..4034.588 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8725.506..8725.506 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598402.43..641934.23 rows=58574 width=20) (actual time=9517.020..10066.266 rows=63657 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.53 rows=381006 width=0) (actual time=86.921..86.921 rows=382690 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.78..51919.19 rows=381006 width=4) (actual time=95.538..585.507 rows=382690 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.326..33.033 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=34.141..34.141 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.312..32.358 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6521.289..6644.593 rows=1602636 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.312..154.401 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8043 width=30) (actual time=0.235..1129.715 rows=8122 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=166.373..5372.980 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=166.217..166.217 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.261..29.986 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.290..26.487 rows=3987 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.272..25.873 rows=3987 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.795..227.444 rows=22047 loops=1)
Q19,1.0,->  Nested Loop  (cost=12811.66..607026.49 rows=1113 width=8) (actual time=34.779..1503.416 rows=1109 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.204..4.204 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.07 rows=7935 width=0) (actual time=3.613..3.613 rows=7925 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7927 width=0) (actual time=3.558..3.558 rows=7853 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.71 rows=7900 width=0) (actual time=3.463..3.463 rows=8175 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12811.10..26405.08 rows=4712 width=30) (actual time=33.071..286.841 rows=4766 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.006..2259.231 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681888.55 rows=60584455 width=8) (actual time=0.005..9880.849 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681888.55 rows=60584455 width=8) (actual time=0.013..8822.039 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2077)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2077)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.07 rows=1964 width=0) (actual time=1.054..1.054 rows=2077 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.56..6518.18 rows=1964 width=4) (actual time=1.400..33.388 rows=2077 loops=1)
Q16,1.0,Sort  (cost=413131.96..413201.54 rows=27833 width=40) (actual time=10856.583..10859.658 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50996.75..50996.75 rows=296885 width=40) (actual time=1237.281..1237.281 rows=297036 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403395.13..411077.26 rows=27833 width=40) (actual time=10061.049..10796.789 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2483.58..50996.75 rows=296885 width=40) (actual time=34.886..1115.492 rows=297036 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=110389.37..1401526.73 rows=2280750 width=12) (actual time=128.116..20732.365 rows=2250049 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=110389.37..1401526.73 rows=2280750 width=12) (actual time=120.040..22879.425 rows=2250049 loops=1)
Q14,1.0,->  Hash Join  (cost=93518.57..1142356.20 rows=765714 width=29) (actual time=1578.280..25885.288 rows=773480 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7996.57..1045348.49 rows=765714 width=12) (actual time=121.054..23484.662 rows=773480 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15043886 width=8) (actual time=0.019..7096.944 rows=14838932 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739421.48 rows=15043886 width=8) (actual time=1071.688..16923.073 rows=15338954 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.010..4447.226 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434368.21 rows=289244 width=15) (actual time=0.163..24141.784 rows=311546 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038901.88 rows=289244 width=27) (actual time=8892.383..33335.102 rows=311546 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=8846.679..8846.679 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..36.769 rows=3945 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.282..25.980 rows=3945 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.904..3825.747 rows=315600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.808..4116.062 rows=315600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.745..37.745 rows=3945 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.844..26.844 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.254..25.308 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..36.144 rows=3945 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=59357233 width=20) (actual time=0.014..20598.115 rows=58727684 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.23 rows=14846668 width=12) (actual time=0.017..16323.912 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268668.96..268668.96 rows=578256 width=8) (actual time=6374.897..6374.897 rows=574043 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5967.12..268668.96 rows=578256 width=8) (actual time=27.599..6151.079 rows=574043 loops=1)
