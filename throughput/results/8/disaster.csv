Q21,699944.0,->  Nested Loop Semi Join  (cost=2406.31..2874274.59 rows=1 width=34) (actual time=34.304..35898.843 rows=699944 loops=1)
Q3,320193.7,->  Sort  (cost=2565288.71..2573293.55 rows=3201937 width=20) (actual time=38373.168..38373.169 rows=10 loops=1)
Q18,303224.3,->  GroupAggregate  (cost=10254428.89..11088295.82 rows=30322434 width=39) (actual time=67147.522..67147.858 rows=100 loops=1)
Q18,75824.7,->  Hash Join  (cost=2198451.96..2817513.56 rows=7582472 width=39) (actual time=42193.654..48371.355 rows=100 loops=1)
Q18,75824.7,->  Hash Join  (cost=2129423.96..2634748.48 rows=7582472 width=20) (actual time=41072.392..47249.751 rows=100 loops=1)
Q18,75824.7,->  Hash  (cost=2817513.56..2817513.56 rows=7582472 width=39) (actual time=48371.521..48371.521 rows=100 loops=1)
Q18,43317.7,->  Sort  (cost=10254428.89..10330234.97 rows=30322434 width=39) (actual time=67147.507..67147.554 rows=700 loops=1)
Q18,43317.7,->  Hash Join  (cost=2912294.46..5657145.37 rows=30322434 width=39) (actual time=48427.598..67146.577 rows=700 loops=1)
Q18,40752.5,->  Hash  (cost=2078483.27..2078483.27 rows=4075255 width=4) (actual time=41004.277..41004.277 rows=100 loops=1)
Q18,40752.5,->  HashAggregate  (cost=1986790.04..2037730.72 rows=4075255 width=8) (actual time=36546.011..41004.061 rows=100 loops=1)
Q21,39522.0,->  Nested Loop Anti Join  (cost=2406.88..2874276.38 rows=1 width=26) (actual time=38.037..38690.882 rows=39522 loops=1)
Q10,28730.5,->  Sort  (cost=2296069.16..2297505.68 rows=574611 width=176) (actual time=31822.243..31822.248 rows=20 loops=1)
Q9,21939.8,->  Sort  (cost=1289205.47..1289205.84 rows=149 width=46) (actual time=94249.818..94806.057 rows=3269041 loops=1)
Q9,21939.8,->  Nested Loop  (cost=67074.80..1289195.74 rows=149 width=24) (actual time=901.388..85322.000 rows=3269041 loops=1)
Q9,21939.8,->  Nested Loop  (cost=67074.37..1289123.52 rows=149 width=24) (actual time=901.367..50891.701 rows=3269041 loops=1)
Q9,21939.8,->  Nested Loop  (cost=67074.08..1289075.45 rows=149 width=28) (actual time=901.358..40364.123 rows=3269041 loops=1)
Q9,21939.8,->  Hash Join  (cost=67076.37..1289200.09 rows=149 width=46) (actual time=901.441..88550.776 rows=3269041 loops=1)
Q2,4837.0,->  Merge Join  (cost=465687.75..888188.74 rows=1 width=190) (actual time=6238.772..8185.933 rows=4837 loops=1)
Q21,3973.0,->  HashAggregate  (cost=2874276.38..2874276.39 rows=1 width=26) (actual time=38746.691..38747.971 rows=3973 loops=1)
Q15,3723.0,->  Subquery Scan on revenue8  (cost=2011252.29..2011336.06 rows=3723 width=12) (actual time=38388.913..38407.706 rows=1 loops=1)
Q15,3723.0,->  Sort  (cost=2011556.87..2011566.18 rows=3723 width=12) (actual time=38407.725..38407.726 rows=1 loops=1)
Q15,3723.0,Merge Join  (cost=4006048.71..4011145.75 rows=3723 width=79) (actual time=38433.248..38433.250 rows=1 loops=1)
Q15,3723.0,->  HashAggregate  (cost=2011252.29..2011298.83 rows=3723 width=12) (actual time=38388.912..38407.704 rows=1 loops=1)
Q7,767.5,Sort  (cost=2143600.46..2143608.14 rows=3070 width=64) (actual time=21974.810..21974.811 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2143376.60..2143422.65 rows=3070 width=64) (actual time=21974.744..21974.753 rows=4 loops=1)
Q8,365.0,Sort  (cost=1781228.26..1781230.08 rows=730 width=38) (actual time=11930.787..11930.788 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1781180.77..1781193.54 rows=730 width=38) (actual time=11930.746..11930.748 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=38749.144..38749.151 rows=100 loops=1)
Q21,100.0,Limit  (cost=2874276.40..2874276.41 rows=1 width=26) (actual time=38749.146..38749.167 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888188.75..888188.76 rows=1 width=190) (actual time=8190.712..8190.722 rows=100 loops=1)
Q2,100.0,Limit  (cost=888188.75..888188.76 rows=1 width=190) (actual time=8190.714..8190.736 rows=100 loops=1)
Q11,37.9,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8400.089..8401.092 rows=8440 loops=1)
Q11,37.9,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8316.325..8395.367 rows=8440 loops=1)
Q3,28.2,->  HashAggregate  (cost=2464076.63..2496096.00 rows=3201937 width=20) (actual time=38306.012..38352.206 rows=113338 loops=1)
Q15,26.8,->  HashAggregate  (cost=1994407.76..1994444.99 rows=3723 width=12) (actual time=18080.961..18111.296 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=726182)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7975.82 rows=782782 width=0) (actual time=124.006..124.006 rows=10739200 loops=1)
Q3,10.6,->  Hash Join  (cost=770117.53..2416047.58 rows=3201937 width=20) (actual time=8915.736..38012.381 rows=299424 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2410.96 rows=319860 width=0) (actual time=35.040..35.040 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.078 rows=8 loops=435564)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.618..3.618 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.606..3.606 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.010 rows=1 loops=1201929)
Q5,5.0,Sort  (cost=1861066.53..1861066.59 rows=25 width=34) (actual time=14083.256..14083.257 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1861065.70..1861065.95 rows=25 width=34) (actual time=14083.210..14083.210 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482784.59..1482784.60 rows=1 width=16) (actual time=12677.801..12677.802 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.17 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=562779)
Q4,5.0,->  HashAggregate  (cost=1482784.57..1482784.58 rows=1 width=16) (actual time=12677.755..12677.757 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=699944)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5725.62 rows=568562 width=0) (actual time=27.842..27.842 rows=2556160 loops=1)
Q13,4.4,Sort  (cost=853033.27..853033.77 rows=200 width=8) (actual time=29266.768..29266.771 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=853023.63..853025.63 rows=200 width=8) (actual time=29266.698..29266.707 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5862.91 rows=582291 width=0) (actual time=27.719..27.719 rows=2561280 loops=1)
Q17,3.9,->  Nested Loop  (cost=82.73..114246.15 rows=20115 width=4) (actual time=1.616..194.309 rows=5112 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=454793)
Q4,3.3,->  Nested Loop Semi Join  (cost=5868.32..1482019.12 rows=153091 width=16) (actual time=28.046..12389.183 rows=516045 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.037 rows=3 loops=1949)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..248394.16 rows=33099488 width=0) (actual time=119.709..119.709 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.332..0.401 rows=3 loops=21642)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54670.65 rows=7284086 width=0) (actual time=27.472..27.472 rows=2558720 loops=1)
Q22,2.3,Sort  (cost=696985.06..696985.07 rows=3 width=20) (actual time=9958.057..9958.058 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644131.03..644131.07 rows=3 width=20) (actual time=9958.011..9958.012 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.056 rows=2 loops=6560)
Q20,2.0,->  Nested Loop  (cost=754.48..11668710.45 rows=29289 width=4) (actual time=13.282..8871.753 rows=58610 loops=1)
Q20,2.0,->  Hash  (cost=11668710.45..11668710.45 rows=29289 width=4) (actual time=8906.945..8906.945 rows=58610 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1987.93 rows=197593 width=0) (actual time=4.195..4.195 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403419.73..404900.86 rows=592452 width=40) (actual time=11045.280..11225.046 rows=1187034 loops=1)
Q16,2.0,->  Hash Join  (cost=54731.91..346614.43 rows=592452 width=40) (actual time=1252.389..7281.079 rows=1187034 loops=1)
Q12,2.0,Sort  (cost=3041073.20..3041073.21 rows=1 width=27) (actual time=32681.540..32681.541 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041073.18..3041073.19 rows=1 width=27) (actual time=32681.493..32681.494 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.591..4422.913 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347105.05..2260667.58 rows=574611 width=176) (actual time=7589.594..29511.929 rows=1148326 loops=1)
Q10,1.9,->  Hash Join  (cost=347103.49..2252765.11 rows=574611 width=154) (actual time=7589.564..29109.875 rows=1148326 loops=1)
Q10,1.9,->  Hash Join  (cost=278075.49..2175117.95 rows=574611 width=12) (actual time=6262.831..26935.698 rows=1148326 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835177.86 rows=20214956 width=8) (actual time=0.013..17817.239 rows=37927978 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347189.19 rows=394426 width=38) (actual time=34.274..31452.318 rows=726182 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921475.24 rows=808598 width=34) (actual time=34.129..24273.061 rows=1505356 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.544 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671519.55..11671522.48 rows=1172 width=51) (actual time=8938.301..8938.408 rows=1793 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669119.56..11671459.81 rows=1172 width=51) (actual time=8907.398..8937.217 rows=1793 loops=1)
Q15,1.5,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.027..19.073 rows=64983 loops=1)
Q1,1.5,Sort  (cost=4178853.53..4178853.55 rows=6 width=20) (actual time=89075.224..89075.224 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4178853.35..4178853.46 rows=6 width=20) (actual time=89075.177..89075.180 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2275032.85..2280778.96 rows=574611 width=176) (actual time=31491.513..31683.601 rows=381721 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27190.94 rows=3620125 width=0) (actual time=27.389..27.389 rows=2543360 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5984.67 rows=597267 width=0) (actual time=4.155..4.155 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.94 rows=139593 width=0) (actual time=455.850..455.850 rows=190857 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.84..41848.16 rows=139593 width=24) (actual time=464.134..1591.111 rows=190857 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=124121 width=4) (actual time=0.011..861.211 rows=108891 loops=1)
Q9,1.1,->  Hash Join  (cost=67073.51..352984.09 rows=495258 width=16) (actual time=901.291..5327.758 rows=435564 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=124121 width=4) (actual time=900.825..900.825 rows=108891 loops=1)
Q9,1.1,GroupAggregate  (cost=1289205.47..1289210.69 rows=149 width=46) (actual time=94259.528..96956.780 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92223.17 rows=9207517 width=0) (actual time=123.393..123.393 rows=10771200 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.747..2052.028 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.43..1733000.57 rows=126209 width=20) (actual time=6.981..9463.062 rows=123442 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.00..1529219.19 rows=416182 width=16) (actual time=6.851..4851.605 rows=405092 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.87..1780201.08 rows=25242 width=16) (actual time=2152.527..11846.857 rows=24725 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.37 rows=31 width=20) (actual time=0.027..0.340 rows=30 loops=13470)
Q8,1.0,->  Hash Join  (cost=38760.43..1780675.93 rows=25242 width=38) (actual time=2152.568..11889.112 rows=24725 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.58..1772056.42 rows=25242 width=16) (actual time=2152.507..11695.012 rows=24725 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2143.129..2143.129 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.98 rows=13807 width=0) (actual time=4.519..4.519 rows=13470 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=427.43..28694.00 rows=13807 width=4) (actual time=6.792..132.544 rows=13470 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.652..400.805 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2732.178 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130544.63 rows=1471384 width=42) (actual time=878.674..21232.710 rows=1464459 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142458.10 rows=61233 width=64) (actual time=927.379..21882.398 rows=58743 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=878.639..8650.215 rows=1201929 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..832.607 rows=119994 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..46.291 rows=8056 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=878.120..878.120 rows=119994 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.642..48.642 rows=8056 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92414.54..1376700.67 rows=765481 width=8) (actual time=124.199..18808.987 rows=763710 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.725..2111.461 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=66105.86..1841178.97 rows=1832263 width=46) (actual time=2257.711..13293.385 rows=1818835 loops=1)
Q5,1.0,->  Hash Join  (cost=70784.86..1860332.82 rows=73288 width=34) (actual time=2320.775..14002.944 rows=72923 loops=1)
Q5,1.0,->  Hash Join  (cost=66105.29..387860.73 rows=458176 width=38) (actual time=2257.685..7250.033 rows=454793 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2227.710..2227.710 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27763.66..336346.54 rows=2290880 width=8) (actual time=27.559..4149.758 rows=2275706 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..411.519 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5867.76..269944.19 rows=568562 width=20) (actual time=28.016..5409.572 rows=562779 loops=1)
Q3,1.0,->  Hash Join  (cost=106306.04..495129.02 rows=1465558 width=12) (actual time=420.952..8259.214 rows=1441463 loops=1)
Q3,1.0,->  Hash  (cost=495129.02..495129.02 rows=1465558 width=12) (actual time=8788.776..8788.776 rows=1441463 loops=1)
Q3,1.0,->  Hash  (cost=46041.88..46041.88 rows=301800 width=4) (actual time=391.321..391.321 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6915.93 rows=301800 width=0) (actual time=66.738..66.738 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56491.67..403343.74 rows=7284086 width=16) (actual time=27.634..4948.025 rows=7209310 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256669.03..1746456.63 rows=33099488 width=12) (actual time=120.491..23442.960 rows=32714094 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6991.38..46041.88 rows=301800 width=4) (actual time=75.563..314.006 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.017..4225.681 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=8174.138..8174.138 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600171.06..643692.28 rows=58499 width=20) (actual time=8683.582..9930.916 rows=63599 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6540.90 rows=380519 width=0) (actual time=86.767..86.767 rows=381814 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6636.03..51902.66 rows=380519 width=4) (actual time=94.991..332.200 rows=381814 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.282..32.866 rows=3973 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.985..33.985 rows=3973 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.268..32.221 rows=3973 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6238.401..6356.224 rows=1586769 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.303..144.595 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8004 width=30) (actual time=0.156..1146.735 rows=8218 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.836..5157.864 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.698..155.698 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.250..28.074 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.273..28.536 rows=4023 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.027..9.027 rows=21642 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.256..27.938 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.659..163.858 rows=21642 loops=1)
Q19,1.0,->  Nested Loop  (cost=12834.82..613084.04 rows=1124 width=8) (actual time=35.637..4362.926 rows=1142 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.40 rows=396740 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.39 rows=8068 width=0) (actual time=3.478..3.478 rows=8047 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8028 width=0) (actual time=3.328..3.328 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.27 rows=7955 width=0) (actual time=3.573..3.573 rows=8071 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.031..0.031 rows=30 loops=4932)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12830.08..26579.60 rows=4780 width=30) (actual time=31.560..363.024 rows=4932 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=16) (actual time=0.006..3282.470 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1683565.69 rows=60644869 width=8) (actual time=0.004..9244.507 rows=59984826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1683565.69 rows=60644869 width=8) (actual time=0.014..9408.592 rows=59984826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=1949)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=1949)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.47 rows=2004 width=0) (actual time=0.898..0.898 rows=1949 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.97..6637.80 rows=2004 width=4) (actual time=1.227..25.363 rows=1949 loops=1)
Q16,1.0,Sort  (cost=413159.05..413228.65 rows=27840 width=40) (actual time=11907.161..11910.030 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51003.70..51003.70 rows=296959 width=40) (actual time=1249.415..1249.415 rows=296923 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403419.73..411103.78 rows=27840 width=40) (actual time=11045.341..11848.039 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2485.20..51003.70 rows=296959 width=40) (actual time=35.088..1126.820 rows=296923 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1971970.96 rows=2243680 width=12) (actual time=0.012..16361.343 rows=2247547 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1971987.55 rows=2243699 width=12) (actual time=0.016..18223.551 rows=2247547 loops=1)
Q14,1.0,->  Hash Join  (cost=93693.51..1154024.27 rows=782782 width=29) (actual time=1675.564..25295.024 rows=772759 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8171.51..1056760.54 rows=782782 width=12) (actual time=124.838..22938.481 rows=772759 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15043992 width=8) (actual time=0.019..7765.865 rows=14839838 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740303.67 rows=15043992 width=8) (actual time=1132.451..18338.568 rows=15339856 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.010..4296.692 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431963.10 rows=291441 width=15) (actual time=0.108..23379.742 rows=310980 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035972.96 rows=291441 width=27) (actual time=8716.840..32379.701 rows=310980 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=8670.584..8670.584 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..36.039 rows=4079 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.291..26.083 rows=4079 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.989..3840.013 rows=326320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.239..4114.976 rows=326320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.163..37.163 rows=4079 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.903..26.903 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..25.442 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..35.410 rows=4079 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817042.75 rows=59045265 width=20) (actual time=0.015..18425.775 rows=59006625 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835177.86 rows=14964930 width=12) (actual time=0.012..17331.803 rows=14807792 loops=1)
Q10,1.0,->  Hash  (cost=270796.85..270796.85 rows=582291 width=8) (actual time=6259.464..6259.464 rows=574145 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6008.49..270796.85 rows=582291 width=8) (actual time=27.882..6032.094 rows=574145 loops=1)
